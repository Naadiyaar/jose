%!PS-Adobe-2.0 EPSF-1.2
%%Title: UNTITLED-2
%%Creator: FreeHand 9.0
%%CreationDate: Thu Oct 11 19:04:56 2001 
%%BoundingBox: 0 0 284 149
%%FHPathName:Q:\MySQL\UNTITLED-2
%ALDOriginalFile:Q:\MySQL\UNTITLED-2
%ALDBoundingBox: -163 -320 449 472
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentCustomColors: (PANTONE 3025 CVC)
%%+ (PANTONE 145 CVC)
%%CMYKCustomColor: 1 0 0 0.51 (PANTONE 3025 CVC)
%%+ 0 0.47 1 0.085 (PANTONE 145 CVC)
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2304 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2304 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1855 -1904 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
1 0 0 0.51 (PANTONE 3025 CVC) false newcmykcustomcolor
0 0.47 1 0.085 (PANTONE 145 CVC) false newcmykcustomcolor
]def
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
q
[3.815364 0 0 3.815364 -3830.449219 -53173.097656] concat
vms
1490.1533 14439.272 m
1492.6162 14439.272 L
1492.6162 14448.9978 L
1496.4291 14440.5193 L
1496.8791 14439.4931 1497.4948 14439.1299 1498.7026 14439.1299 C
1499.9104 14439.1299 1500.5025 14439.4931 1500.9524 14440.5193 C
1504.7653 14448.9978 L
1504.7653 14439.272 L
1507.2282 14439.272 L
1507.2282 14448.982 L
1507.2282 14449.9293 1506.8493 14450.3872 1506.0678 14450.6241 C
1504.1969 14451.2082 1502.9417 14450.703 1502.3734 14449.4399 C
1498.6316 14441.0719 L
1495.0081 14449.4399 L
1494.4635 14450.703 1493.1846 14451.2082 1491.3137 14450.6241 C
1490.5322 14450.3872 1490.1533 14449.9293 1490.1533 14448.982 C
1490.1533 14439.272 L
[1 4]vc
f	
n
1509.2763 14447.1885 m
1511.7383 14447.1885 L
1511.7383 14441.8302 L
1511.7154 14441.5391 1511.8319 14440.8559 1513.1808 14440.8347 C
1513.8692 14440.8239 1518.4936 14440.8347 1518.5368 14440.8347 C
1518.5368 14447.2144 L
1521.0045 14447.2144 L
1521.0161 14447.2144 1521.0021 14438.5142 1521.0023 14438.4771 C
1521.0161 14436.3314 1518.3399 14435.8654 1517.1066 14435.8293 C
1509.3296 14435.8293 L
1509.3296 14437.4863 L
1509.3433 14437.4863 1517.1007 14437.4845 1517.1202 14437.4865 C
1518.7055 14437.654 1518.5183 14438.4418 1518.5181 14438.707 C
1518.5181 14439.3529 L
1513.2832 14439.3529 L
1510.8476 14439.3755 1509.2966 14440.4384 1509.2775 14441.6611 C
1509.2757 14441.7745 1509.3299 14447.1349 1509.2763 14447.1885 C
f	
n
true eomode
1562.2931 14453.3635 m
1560.7792 14453.4048 1559.6226 14453.264 1558.6339 14452.8469 C
1558.3529 14452.7284 1557.905 14452.7255 1557.859 14452.3734 C
1558.0136 14452.2114 1558.0375 14451.9697 1558.1603 14451.7706 C
1558.3961 14451.3885 1558.7949 14450.8766 1559.1505 14450.6083 C
1559.5392 14450.3149 1559.9394 14450.0012 1560.3558 14449.7473 C
1561.0969 14449.2954 1561.9241 14449.0375 1562.6375 14448.5849 C
1563.058 14448.3181 1563.4756 14447.9819 1563.8859 14447.6809 C
1564.0885 14447.5322 1564.225 14447.3006 1564.4886 14447.2073 C
1564.4886 14447.2217 1564.4886 14447.236 1564.4886 14447.2504 C
1564.3499 14447.4268 1564.3143 14447.6691 1564.1872 14447.8531 C
1564.0007 14448.0396 1563.8141 14448.2262 1563.6276 14448.4127 C
1563.0805 14449.1391 1562.3857 14449.7769 1561.6473 14450.3069 C
1561.0585 14450.7296 1559.7407 14451.3006 1559.4949 14451.9859 C
1559.4805 14452.0003 1559.4662 14452.0146 1559.4518 14452.029 C
1559.8692 14452.076 1560.3581 14452.227 1560.7433 14452.3303 C
1561.3907 14452.5039 1561.9691 14452.459 1562.6375 14452.6317 C
1562.9388 14452.7178 1563.2402 14452.8038 1563.5415 14452.89 C
1563.5415 14452.9474 1563.5415 14453.0048 1563.5415 14453.0621 C
1563.2037 14453.4089 1562.9628 14453.8678 1562.5944 14454.1815 C
1561.6304 14455.0023 1560.5783 14455.8224 1559.4949 14456.5062 C
1558.8939 14456.8855 1558.1514 14457.1319 1557.5146 14457.4533 C
1557.3004 14457.5614 1556.9241 14457.6175 1556.7827 14457.7977 C
1556.448 14458.2243 1556.2658 14458.7647 1556.0078 14459.2614 C
1555.4674 14460.302 1554.9368 14461.4385 1554.4581 14462.5332 C
1554.1316 14463.2798 1553.9182 14464.0161 1553.511 14464.6857 C
1551.5564 14467.8997 1549.4521 14469.8394 1546.1926 14471.746 C
1545.4993 14472.1515 1544.6642 14472.3117 1543.7818 14472.5209 C
1543.3083 14472.5496 1542.8347 14472.5783 1542.3612 14472.607 C
1542.0722 14472.728 1541.7714 14473.0814 1541.5002 14473.2528 C
1540.4204 14473.9351 1537.6507 14475.4187 1536.8509 14473.468 C
1536.3461 14472.2368 1537.6057 14471.0352 1538.0563 14470.4114 C
1538.3725 14469.9737 1538.7774 14469.4829 1539.0034 14468.9908 C
1539.1519 14468.6673 1539.1776 14468.343 1539.3047 14468.0006 C
1539.6179 14467.1573 1539.8901 14466.2401 1540.2948 14465.4607 C
1540.4995 14465.0665 1540.7249 14464.651 1540.9836 14464.2983 C
1541.1423 14464.082 1541.4141 14463.9867 1541.4572 14463.6526 C
1541.1911 14463.2805 1541.1761 14462.7031 1541.0267 14462.2319 C
1540.354 14460.1105 1540.6075 14457.4736 1541.5863 14455.9035 C
1541.8868 14455.4215 1542.594 14454.3878 1543.5666 14454.7842 C
1544.4172 14455.1308 1544.2273 14456.2046 1544.4706 14457.1519 C
1544.5258 14457.3667 1544.492 14457.5247 1544.5998 14457.6685 C
1544.5998 14457.6542 1544.5998 14457.6398 1544.5998 14457.6255 C
1544.858 14457.1089 1545.1164 14456.5923 1545.3747 14456.0757 C
1545.9483 14455.1522 1546.9661 14454.187 1547.8285 14453.5357 C
1548.2758 14453.1979 1548.6278 14452.6139 1549.2061 14452.4164 C
1549.2061 14452.4308 1549.2061 14452.4451 1549.2061 14452.4595 C
1549.1917 14452.4595 1549.1774 14452.4595 1549.163 14452.4595 C
1549.0509 14452.6341 1548.8757 14452.7065 1548.7325 14452.8469 C
1548.3956 14453.1772 1548.021 14453.588 1547.7424 14453.9662 C
1546.9579 14455.0313 1546.2646 14456.1969 1545.633 14457.4102 C
1545.3314 14457.9896 1545.0693 14458.6288 1544.815 14459.2184 C
1544.717 14459.4457 1544.718 14459.7894 1544.5137 14459.9072 C
1544.2354 14459.4752 1543.8251 14459.1258 1543.6096 14458.6156 C
1543.2652 14457.8001 1543.2207 14456.8057 1543.093 14455.7743 C
1543.0175 14455.7472 1543.0512 14455.766 1543.0069 14455.7313 C
1542.4075 14455.876 1542.1966 14456.4933 1541.9738 14457.0228 C
1541.4103 14458.3619 1541.3055 14460.5182 1541.8016 14462.0597 C
1541.9299 14462.4584 1542.5096 14463.7146 1542.2751 14464.0831 C
1542.1631 14464.4507 1541.7934 14464.6632 1541.5863 14464.9441 C
1541.3304 14465.2913 1541.0746 14465.7486 1540.8976 14466.1495 C
1540.4363 14467.1938 1540.2208 14468.3658 1539.7352 14469.4213 C
1539.5031 14469.9258 1539.1104 14470.4363 1538.7881 14470.885 C
1538.4311 14471.3819 1538.0316 14471.7477 1537.7549 14472.3487 C
1537.6566 14472.5624 1537.5228 14472.9042 1537.6688 14473.1236 C
1537.7152 14473.2717 1537.7808 14473.3336 1537.9271 14473.3819 C
1538.1769 14473.5745 1538.8723 14473.3178 1539.1325 14473.2097 C
1539.8227 14472.923 1540.3988 14472.65 1540.9836 14472.2626 C
1541.2646 14472.0765 1541.5483 14471.7166 1541.8877 14471.6169 C
1542.0168 14471.6169 1542.146 14471.6169 1542.2751 14471.6169 C
1542.8812 14471.4776 1543.5601 14471.5736 1544.1262 14471.4016 C
1545.127 14471.0976 1546.0238 14470.6244 1546.8384 14470.1101 C
1549.3198 14468.5433 1551.3482 14466.3131 1552.7361 14463.6526 C
1552.9595 14463.2243 1553.056 14462.8153 1553.2527 14462.361 C
1553.6495 14461.4448 1554.1493 14460.5019 1554.5442 14459.6058 C
1554.938 14458.7119 1555.322 14457.8098 1555.8787 14457.0658 C
1556.1715 14456.6746 1557.3021 14456.465 1557.8159 14456.2479 C
1558.1762 14456.0956 1558.7663 14455.937 1559.1074 14455.7313 C
1559.7591 14455.3384 1560.3904 14454.8703 1561.0016 14454.4398 C
1561.3071 14454.2246 1562.2463 14453.7526 1562.2931 14453.3635 C
f	
n
1543.05 14469.7657 m
1542.7345 14469.7714 1542.5113 14469.7312 1542.2751 14469.6796 C
1542.2751 14469.6653 1542.2751 14469.6509 1542.2751 14469.6366 C
1542.2895 14469.6366 1542.3038 14469.6366 1542.3182 14469.6366 C
1542.4687 14469.3271 1542.7347 14469.1281 1542.9209 14468.8616 C
1543.0643 14468.5603 1543.2078 14468.2589 1543.3513 14467.9576 C
1543.3657 14467.9719 1543.3801 14467.9863 1543.3944 14468.0006 C
1543.661 14468.1884 1543.7831 14468.489 1543.7818 14468.9477 C
1543.6748 14469.0602 1543.6592 14469.2011 1543.5666 14469.3352 C
1543.4433 14469.5138 1543.2054 14469.6154 1543.05 14469.7657 C
f	
n
q
vms
false eomode
1522.9027 14439.272 m
1529.9837 14439.272 L
1530.8126 14439.272 1531.6178 14439.4457 1532.2572 14439.7457 C
1533.3229 14440.2351 1533.844 14440.8983 1533.844 14441.7666 C
1533.844 14443.5665 L
1533.844 14444.277 1533.2519 14444.9401 1532.0915 14445.3822 C
1531.4757 14445.619 1530.7179 14445.7453 1529.9837 14445.7453 C
1526.9997 14445.7453 L
1526.0051 14445.7453 1525.5315 14446.0454 1525.4131 14446.7085 C
1525.3894 14446.7874 1525.3894 14446.8506 1525.3894 14446.9295 C
1525.3894 14448.0505 L
1525.3894 14448.1136 1525.3894 14448.1768 1525.4131 14448.2558 C
1525.5315 14448.761 1525.792 14448.9031 1526.6682 14448.982 C
1526.7393 14448.982 1526.834 14448.9978 1526.905 14448.9978 C
1533.9387 14448.9978 L
1533.9387 14450.6398 L
1527.0234 14450.6398 L
1526.0288 14450.6398 1525.5078 14450.5767 1525.0341 14450.4346 C
1523.5658 14449.9767 1522.9264 14449.2504 1522.9264 14447.9873 C
1522.9264 14446.5506 L
1522.9264 14445.4454 1524.1816 14444.498 1526.2893 14444.277 C
1526.5261 14444.2612 1526.7629 14444.2454 1526.9997 14444.2454 C
1529.5575 14444.2454 L
1529.6522 14444.2454 1529.7469 14444.2454 1529.818 14444.2296 C
1530.5995 14444.1665 1530.931 14444.0244 1531.1678 14443.7402 C
1531.31 14443.5981 1531.3573 14443.456 1531.3573 14443.2981 C
1531.3573 14441.8614 L
1531.3573 14441.6877 1531.2389 14441.4666 1531.0021 14441.2772 C
1530.7889 14441.0877 1530.4337 14440.9614 1529.9601 14440.9298 C
1529.8653 14440.9298 1529.7943 14440.914 1529.6996 14440.914 C
1522.9027 14440.914 L
1522.9027 14439.272 L
[1 5]vc
f	
n
1549.2086 14442.1298 m
1549.2086 14440.4404 1550.4638 14439.4931 1552.9978 14439.3036 C
1553.2346 14439.2878 1553.4715 14439.272 1553.7083 14439.272 C
1560.1262 14439.272 L
1560.1262 14440.914 L
1553.6609 14440.914 L
1552.2163 14440.914 1551.6716 14441.2772 1551.6716 14442.1456 C
1551.6716 14450.6398 L
1549.2086 14450.6398 L
1549.2086 14442.1298 L
f	
n
1535.4159 14442.0436 m
1535.4159 14447.8974 L
1535.4159 14449.3846 1536.4601 14450.2864 1538.5247 14450.5712 C
1538.7383 14450.6029 1538.9756 14450.6187 1539.1892 14450.6187 C
1543.8643 14450.6187 L
1544.1016 14450.6187 1544.3152 14450.6029 1544.5525 14450.5712 C
1546.6171 14450.2864 1547.6613 14449.3846 1547.6613 14447.8974 C
1547.6613 14442.0436 L
1547.6613 14440.8371 1547.2178 14440.1912 1546.1959 14439.7706 C
1548.6219 14437.5806 L
1545.7621 14437.5806 L
1543.7995 14439.3524 L
1541.8234 14439.2274 L
1539.1892 14439.2274 L
1538.7383 14439.2274 1538.2637 14439.2907 1537.7416 14439.433 C
1536.1753 14439.8602 1535.4159 14440.6829 1535.4159 14442.0436 C
h
1538.0741 14442.186 m
1538.0741 14442.1069 1538.0979 14442.0277 1538.1216 14441.9328 C
1538.264 14441.2525 1538.9048 14440.8728 1539.8777 14440.8728 C
1542.1153 14440.8728 L
1540.0598 14442.7284 L
1542.9196 14442.7284 L
1544.7123 14441.11 L
1545.0425 14441.2861 1545.26 14441.5555 1545.3359 14441.9012 C
1545.3597 14441.9803 1545.3597 14442.0594 1545.3597 14442.1385 C
1545.3597 14447.7551 L
1545.3597 14447.8183 1545.3597 14447.8974 1545.3359 14447.9765 C
1545.1935 14448.6094 1544.5528 14448.9733 1543.6036 14448.9733 C
1539.8777 14448.9733 L
1538.7861 14448.9733 1538.0741 14448.4986 1538.0741 14447.7551 C
1538.0741 14442.186 L
f	
n
true eomode
1561.2566 14439.2599 m
1561.6095 14439.2599 L
1561.6095 14440.6314 L
1562.0988 14440.6314 L
1562.0988 14440.9121 L
1560.7673 14440.9121 L
1560.7673 14440.6314 L
1561.2566 14440.6314 L
1561.2566 14439.2599 L
h
1563.9997 14439.2599 m
1564.3285 14439.2599 L
1564.3285 14440.9121 L
1563.8312 14440.9121 L
1563.4021 14439.7771 L
1562.9651 14440.9121 L
1562.4677 14440.9121 L
1562.4677 14439.2599 L
1562.7967 14439.2599 L
1562.7967 14440.5111 L
1562.8045 14440.5111 L
1563.2738 14439.2599 L
1563.5224 14439.2599 L
1563.9916 14440.5111 L
1563.9997 14440.5111 L
1563.9997 14439.2599 L
f	
n
vmr
Q
true eomode
vmr
Q
false eomode
true eomode
1857.1074 1976.9956 m
1857.1074 2000.6236 L
1864.4107 2000.6236 L
1866.1304 2000.6236 1867.3987 2000.4735 1868.2155 2000.1734 C
1869.3333 1999.7658 1870.2255 1999.0098 1870.8918 1997.9055 C
1871.5582 1996.8012 1871.8914 1995.4448 1871.8914 1993.8364 C
1871.8914 1991.7138 1871.349 1989.9823 1870.2643 1988.642 C
1869.1796 1987.3017 1867.3057 1986.6316 1864.6427 1986.6316 C
1859.6814 1986.6316 L
1859.6814 1976.9956 L
1857.1074 1976.9956 L
h
1859.6814 1989.4036 m
1864.6917 1989.4036 L
1866.2709 1989.4036 1867.4256 1989.761 1868.1559 1990.4758 C
1868.8862 1991.1907 1869.2514 1992.2681 1869.2514 1993.708 C
1869.2514 1994.6434 1869.0715 1995.4442 1868.7118 1996.1106 C
1868.352 1996.7769 1867.917 1997.2337 1867.4067 1997.4809 C
1866.8964 1997.728 1865.9754 1997.8516 1864.6437 1997.8516 C
1859.6814 1997.8516 L
1859.6814 1989.4036 L
[1 4]vc
false setoverprint
f	
n
1874.4471 1988.4956 m
1874.4471 1992.5202 1875.3341 1995.6137 1877.108 1997.776 C
1878.8819 1999.9384 1881.0913 2001.0196 1883.7361 2001.0196 C
1885.4456 2001.0196 1887.0046 2000.5366 1888.4131 1999.5707 C
1889.8216 1998.6047 1890.9371 1997.2016 1891.7595 1995.3611 C
1892.5819 1993.5207 1892.9931 1991.3288 1892.9931 1988.7854 C
1892.9931 1985.287 1892.1975 1982.4378 1890.6063 1980.2378 C
1888.8539 1977.8123 1886.5585 1976.5996 1883.7201 1976.5996 C
1880.8601 1976.5996 1878.5594 1977.8445 1876.818 1980.3343 C
1875.2374 1982.5879 1874.4471 1985.3083 1874.4471 1988.4956 C
h
1877.0871 1988.4554 m
1877.0871 1985.5448 1877.73 1983.2867 1879.0158 1981.6811 C
1880.3016 1980.0754 1881.8644 1979.2726 1883.7041 1979.2726 C
1885.5869 1979.2726 1887.1657 1980.0834 1888.4407 1981.705 C
1889.7157 1983.3267 1890.3531 1985.711 1890.3531 1988.858 C
1890.3531 1990.8879 1890.025 1992.7029 1889.3688 1994.3031 C
1888.8631 1995.5275 1888.1019 1996.5075 1887.0851 1997.2431 C
1886.0683 1997.9788 1884.9575 1998.3466 1883.7526 1998.3466 C
1881.8159 1998.3466 1880.2208 1997.5411 1878.9674 1995.9301 C
1877.7139 1994.3191 1877.0871 1991.8275 1877.0871 1988.4554 C
f	
n
false eomode
1899.5691 1976.9956 m
1894.4556 2000.6236 L
1897.0724 2000.6236 L
1900.0156 1985.1347 L
1900.3267 1983.5445 1900.6001 1981.9329 1900.836 1980.2997 C
1901.7172 1984.6676 L
1905.4534 2000.6236 L
1908.4899 2000.6236 L
1911.265 1988.6647 L
1911.9429 1985.7528 1912.4485 1982.9645 1912.782 1980.2997 C
1913.0294 1981.8363 1913.3467 1983.55 1913.7338 1985.441 C
1916.7837 2000.6236 L
1919.4057 2000.6236 L
1914.0808 1976.9956 L
1911.5733 1976.9956 L
1907.4865 1994.9986 L
1906.875 1997.7706 L
1906.6904 1996.739 1906.5004 1995.815 1906.3052 1994.9986 C
1902.1549 1976.9956 L
1899.5691 1976.9956 L
f	
n
1921.7851 1976.9956 m
1921.7851 2000.6236 L
1935.7771 2000.6236 L
1935.7771 1997.8516 L
1924.3591 1997.8516 L
1924.3591 1990.5916 L
1935.0841 1990.5916 L
1935.0841 1987.8196 L
1924.3591 1987.8196 L
1924.3591 1979.7676 L
1936.2391 1979.7676 L
1936.2391 1976.9956 L
1921.7851 1976.9956 L
f	
n
true eomode
1939.7519 1976.9956 m
1939.7519 2000.6236 L
1948.336 2000.6236 L
1950.129 2000.6236 1951.4523 2000.4032 1952.3058 1999.9623 C
1953.1593 1999.5214 1953.8599 1998.7876 1954.4075 1997.7608 C
1954.9551 1996.7341 1955.2289 1995.5433 1955.2289 1994.1886 C
1955.2289 1992.4035 1954.7644 1990.9572 1953.8354 1989.8499 C
1952.9064 1988.7425 1951.5559 1988.0382 1949.7839 1987.7371 C
1950.5064 1987.3095 1951.0564 1986.8765 1951.4339 1986.4382 C
1952.1939 1985.5359 1952.863 1984.5314 1953.4412 1983.4249 C
1956.8129 1976.9956 L
1953.5933 1976.9956 L
1951.0059 1981.8992 L
1950.0032 1983.8176 1949.2482 1985.1125 1948.741 1985.7839 C
1948.2338 1986.4552 1947.7426 1986.9073 1947.2674 1987.1402 C
1946.7921 1987.3731 1946.1274 1987.4896 1945.2732 1987.4896 C
1942.3259 1987.4896 L
1942.3259 1976.9956 L
1939.7519 1976.9956 L
h
1942.3259 1990.1956 m
1947.8276 1990.1956 L
1949.0287 1990.1956 1949.9402 1990.3407 1950.5622 1990.631 C
1951.1842 1990.9213 1951.6775 1991.3783 1952.0421 1992.0018 C
1952.4066 1992.6254 1952.5889 1993.351 1952.5889 1994.1788 C
1952.5889 1995.3719 1952.2403 1996.3099 1951.5432 1996.9926 C
1950.8461 1997.6752 1949.8112 1998.0166 1948.4386 1998.0166 C
1942.3259 1998.0166 L
1942.3259 1990.1956 L
f	
n
false eomode
1959.3109 1976.9956 m
1959.3109 2000.6236 L
1973.3029 2000.6236 L
1973.3029 1997.8516 L
1961.8849 1997.8516 L
1961.8849 1990.5916 L
1972.6099 1990.5916 L
1972.6099 1987.8196 L
1961.8849 1987.8196 L
1961.8849 1979.7676 L
1973.7649 1979.7676 L
1973.7649 1976.9956 L
1959.3109 1976.9956 L
f	
n
true eomode
1977.2447 1976.9956 m
1977.2447 2000.6236 L
1983.9267 2000.6236 L
1985.5798 2000.6236 1986.8358 2000.4785 1987.6949 2000.1884 C
1988.8217 1999.8123 1989.7984 1999.1247 1990.6249 1998.1254 C
1991.4514 1997.1261 1992.0956 1995.8663 1992.5572 1994.3459 C
1993.0189 1992.8254 1993.2497 1991.023 1993.2497 1988.9385 C
1993.2497 1986.2631 1992.8579 1983.9932 1992.0743 1982.1289 C
1991.2907 1980.2646 1990.2844 1978.9429 1989.0553 1978.164 C
1987.8263 1977.3851 1986.2188 1976.9956 1984.233 1976.9956 C
1977.2447 1976.9956 L
h
1979.8187 1979.7676 m
1983.9354 1979.7676 L
1985.5975 1979.7676 1986.8573 1980.0394 1987.715 1980.583 C
1988.5726 1981.1267 1989.2319 1982.0013 1989.6929 1983.2068 C
1990.3041 1984.8107 1990.6097 1986.7321 1990.6097 1988.971 C
1990.6097 1991.3714 1990.2854 1993.2578 1989.6367 1994.6302 C
1988.9881 1996.0026 1988.1545 1996.9204 1987.1359 1997.3834 C
1986.4498 1997.6955 1985.3617 1997.8516 1983.8715 1997.8516 C
1979.8187 1997.8516 L
1979.8187 1979.7676 L
f	
n
2004.9766 1976.9956 m
2004.9766 2000.6236 L
2012.2603 2000.6236 L
2013.7357 2000.6236 2014.904 2000.3956 2015.7653 1999.9396 C
2016.6266 1999.4836 2017.3318 1998.7729 2017.8809 1997.8075 C
2018.4301 1996.8421 2018.7046 1995.7748 2018.7046 1994.6057 C
2018.7046 1993.5222 2018.4673 1992.546 2017.9926 1991.677 C
2017.5178 1990.808 2016.8491 1990.1107 2015.9863 1989.5851 C
2017.1041 1989.1764 2017.9852 1988.4797 2018.6293 1987.495 C
2019.2735 1986.5103 2019.5956 1985.2971 2019.5956 1983.8555 C
2019.5956 1982.4241 2019.3032 1981.1678 2018.7183 1980.0865 C
2018.1334 1979.0052 2017.3526 1978.2198 2016.3758 1977.7301 C
2015.399 1977.2404 2014.0573 1976.9956 2012.3506 1976.9956 C
2004.9766 1976.9956 L
h
2007.5506 1990.6906 m
2011.7442 1990.6906 L
2012.8411 1990.6906 2013.6207 1990.766 2014.0831 1990.9169 C
2014.7496 1991.1431 2015.263 1991.523 2015.6233 1992.0565 C
2015.9835 1992.59 2016.1636 1993.3148 2016.1636 1994.2309 C
2016.1636 1995.082 2015.9997 1995.7905 2015.6717 1996.3563 C
2015.3438 1996.9221 2014.9082 1997.3128 2014.3651 1997.5283 C
2013.822 1997.7438 2012.8463 1997.8516 2011.4379 1997.8516 C
2007.5506 1997.8516 L
2007.5506 1990.6906 L
h
2007.5506 1979.7676 m
2012.3661 1979.7676 L
2013.4289 1979.7676 2014.2127 1979.8647 2014.7173 1980.0589 C
2015.4471 1980.3391 2016.0026 1980.7999 2016.3838 1981.4416 C
2016.765 1982.0832 2016.9556 1982.889 2016.9556 1983.8591 C
2016.9556 1984.7542 2016.7731 1985.5117 2016.408 1986.1317 C
2016.043 1986.7516 2015.5518 1987.2044 2014.9344 1987.4901 C
2014.317 1987.7758 2013.3481 1987.9186 2012.0278 1987.9186 C
2007.5506 1987.9186 L
2007.5506 1979.7676 L
f	
n
false eomode
2028.5534 1976.9956 m
2028.5534 1987.0044 L
2021.0954 2000.6236 L
2024.2149 2000.6236 L
2028.0218 1993.4977 L
2028.7746 1992.0896 2029.436 1990.7569 2030.0059 1989.4995 C
2030.5776 1990.7356 2031.2841 1992.1275 2032.1257 1993.675 C
2035.8954 2000.6236 L
2038.8494 2000.6236 L
2031.1274 1987.0044 L
2031.1274 1976.9956 L
2028.5534 1976.9956 L
f	
n
vmr
vmr
end
%%Trailer

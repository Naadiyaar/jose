/*
 * JSP generated by Resin-3.0.14 (built Tue, 05 Jul 2005 11:03:36 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import de.jose.web.WebApplication;
import de.jose.web.SessionUtil;
import de.jose.pgn.Collection;
import de.jose.db.JoConnection;
import java.util.List;
import java.util.Iterator;
import java.sql.SQLException;
import java.io.IOException;
import de.jose.db.JoPreparedStatement;
import java.sql.ResultSet;
import de.jose.Language;

public class _index__jsp extends com.caucho.jsp.JavaPage{
  private boolean _caucho_isDead;

  
  	public static int getDepth(String path)
  	{
  		int depth = 0;
  		int i=-1;
  		for (;;)
  		{
  			i = path.indexOf("/",i+1);
  			if (i >= 0)
  				depth++;
  			else
  				break;
  		}
  		return depth;
  	}

  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.Application _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = com.caucho.jsp.QJspFactory.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true);
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      
	WebApplication.open(application,response);
	SessionUtil su = new SessionUtil(request,session);

	JoConnection connection = null;
	try {
		connection = JoConnection.get();
		JoPreparedStatement pstm = connection.getPreparedStatement(
			"select Parent.Id, Parent.Path, Parent.Name, Parent.GameCount, COUNT(Child.Id)" +
			" from Collection Parent LEFT OUTER JOIN Collection Child ON Child.PId = Parent.Id" +
			" group by Parent.Id" +
			" order by Parent.Path");

		pstm.execute();
		ResultSet res = pstm.getResultSet();

		for (int line=1; res.next(); line++)
		{
			String row_style = "even";

			int CId = res.getInt(1);
			String path = res.getString(2);
			String name = res.getString(3);
			if (Collection.isSystem(CId))
				name = Language.get(name);

			int gameCount = res.getInt(4);
			boolean hasChildren = res.getInt(5) > 0;

			int depth = getDepth(path)-2;

			
      out.write(_jsp_string1, 0, _jsp_string1.length);
      out.print((row_style));
      out.write(_jsp_string2, 0, _jsp_string2.length);
      out.print((CId));
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((16*depth));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      
						if (gameCount > 0) {
							
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((CId));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((CId));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((CId));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((CId));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print((name));
      out.write(_jsp_string10, 0, _jsp_string10.length);
      
						}
						else {
							
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((CId));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      out.print((CId));
      out.write(_jsp_string12, 0, _jsp_string12.length);
      out.print((CId));
      out.write(_jsp_string13, 0, _jsp_string13.length);
      out.print((CId));
      out.write(_jsp_string14, 0, _jsp_string14.length);
      out.print((name));
      out.write(_jsp_string15, 0, _jsp_string15.length);
      
						}
					
      out.write(_jsp_string16, 0, _jsp_string16.length);
      
						if (gameCount==1) {
						
      out.write(_jsp_string17, 0, _jsp_string17.length);
      out.print((CId));
      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print((gameCount));
      out.write(_jsp_string19, 0, _jsp_string19.length);
      
						}
						else if (gameCount > 0) {
							
      out.write(_jsp_string17, 0, _jsp_string17.length);
      out.print((CId));
      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print((gameCount));
      out.write(_jsp_string20, 0, _jsp_string20.length);
      
						}
					
      out.write(_jsp_string21, 0, _jsp_string21.length);
      out.print((CId));
      out.write(',');
      out.print((depth));
      out.write(',');
      out.print((hasChildren));
      out.write(',');
      out.print((hasChildren));
      out.write(_jsp_string22, 0, _jsp_string22.length);
      
		}

      out.write(_jsp_string23, 0, _jsp_string23.length);
      
	} finally {
		JoConnection.release(connection);
	}

      out.write(_jsp_string24, 0, _jsp_string24.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      com.caucho.jsp.QJspFactory.freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.make.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.util.CauchoSystem.getVersionId() != -8852640556211195023L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.make.Dependency depend;
      depend = (com.caucho.make.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("index.jsp"), -8614366815003503451L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string11;
  private final static char []_jsp_string13;
  private final static char []_jsp_string7;
  private final static char []_jsp_string0;
  private final static char []_jsp_string5;
  private final static char []_jsp_string6;
  private final static char []_jsp_string18;
  private final static char []_jsp_string21;
  private final static char []_jsp_string12;
  private final static char []_jsp_string2;
  private final static char []_jsp_string8;
  private final static char []_jsp_string9;
  private final static char []_jsp_string23;
  private final static char []_jsp_string24;
  private final static char []_jsp_string3;
  private final static char []_jsp_string16;
  private final static char []_jsp_string22;
  private final static char []_jsp_string14;
  private final static char []_jsp_string19;
  private final static char []_jsp_string1;
  private final static char []_jsp_string15;
  private final static char []_jsp_string4;
  private final static char []_jsp_string20;
  private final static char []_jsp_string10;
  private final static char []_jsp_string17;
  static {
    _jsp_string11 = "\" height=\"16\" width=\"16\"onclick=\"toggle(".toCharArray();
    _jsp_string13 = "\" height=\"16\" width=\"16\" onclick=\"toggle(".toCharArray();
    _jsp_string7 = "\"><img border=0 align=middle  name=\"f-".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<html>\r\n<head>\r\n	<style>\r\n		td,th,input { font-family: Arial,Helvetica,Sans-Serif; font-size: 14px; }\r\n		TR.odd {  background-color: #e2e2ff;}\r\n		TR.even {  background-color: #eeeeff; }\r\n		TD { padding:2 4 2 4; white-space: nowrap; }\r\n		TD.center { text-align: center; }\r\n		TD.right { text-align: right; }\r\n		TR.header, TR.footer {  background-color: #e5e5e5; padding: 8 4 8 4; }\r\n		A { color:black; text-decoration: none; }\r\n	</style>\r\n\r\n</head>\r\n<script language=\"JavaScript\">\r\n	var cids = new Array();\r\n\r\n	function adjust_image(CId)\r\n	{\r\n		var image = document.images['x-'+CId];\r\n		if (!image.canExpand)\r\n			image.src = \"nav/line_root.gif\";\r\n		else if (image.isExpanded)\r\n			image.src = \"nav/minus.gif\";\r\n		else\r\n			image.src = \"nav/plus.gif\";\r\n\r\n		var folder_image = document.images['f-'+CId];\r\n		if (image.canExpand && image.isExpanded)\r\n			folder_image.src = \"nav/folder_open.gif\";\r\n		else\r\n			folder_image.src = \"nav/folder.gif\";\r\n	}\r\n\r\n	function add_image(CId, nest_depth, canExpand, isExpanded)\r\n	{\r\n		cids[cids.length] = CId;\r\n		var image = document.images['x-'+CId];\r\n		image.nestDepth = nest_depth;\r\n		image.canExpand = canExpand;\r\n		image.isExpanded = isExpanded;\r\n		adjust_image(CId);\r\n	}\r\n\r\n	function toggle(CId)\r\n	{\r\n		var image = document.images['x-'+CId];\r\n		if (!image.canExpand)\r\n			return;\r\n		image.isExpanded = ! image.isExpanded;\r\n		adjust_image(CId);\r\n		showChildren(CId, image.isExpanded);\r\n	}\r\n\r\n	function showChildren(parentId, visible)\r\n	{\r\n		var parentImage = document.images['x-'+parentId];\r\n		var i = cids.indexOf(parentId)+1;\r\n\r\n		for ( ; i < cids.length; i++)\r\n		{\r\n			var childId = cids[i];\r\n			var childImage = document.images['x-'+childId];\r\n			if (childImage.nestDepth <= parentImage.nestDepth)\r\n				break;\r\n\r\n			if (childImage.nestDepth == (parentImage.nestDepth+1))\r\n			{\r\n				show(childId, visible);\r\n				if (childImage.canExpand && childImage.isExpanded)\r\n					showChildren(childId, visible);\r\n			}\r\n		}\r\n	}\r\n\r\n	function show(CId, visible)\r\n	{\r\n		var row = document.getElementById('r-'+CId);\r\n		if (visible)\r\n			row.style.display = '';\r\n		else\r\n			row.style.display = 'none';\r\n	}\r\n\r\n</script>\r\n\r\n<body>\r\n<table border=0 cellpadding=0 cellspacing=0>\r\n	<tr class=\"header\">\r\n		<th colspan=\"2\">&nbsp;</th>\r\n	</tr>\r\n\r\n".toCharArray();
    _jsp_string5 = "\r\n					<img align=middle name=\"x-".toCharArray();
    _jsp_string6 = "\" height=\"16\" width=\"16\">\r\n\r\n					<a href=\"collection.jsp?CId=".toCharArray();
    _jsp_string18 = "\">(".toCharArray();
    _jsp_string21 = "\r\n				</td>\r\n			</tr>\r\n			<script language=\"JavaScript\">\r\n				add_image(".toCharArray();
    _jsp_string12 = ")\">\r\n\r\n					<img border=0 align=middle  name=\"f-".toCharArray();
    _jsp_string2 = "\" id=\"r-".toCharArray();
    _jsp_string8 = "\" height=\"16\" width=\"16\"></a>\r\n					<a href=\"collection.jsp?CId=".toCharArray();
    _jsp_string9 = "\">".toCharArray();
    _jsp_string23 = "\r\n\r\n	<tr class=\"footer\">\r\n		<th colspan=\"2\">&nbsp;</th>\r\n	</tr>\r\n</table>\r\n</body>\r\n</html>\r\n".toCharArray();
    _jsp_string24 = "\r\n".toCharArray();
    _jsp_string3 = "\">\r\n				<td>\r\n					<img src=\"nav/pixel.gif\" height=\"16\" width=\"".toCharArray();
    _jsp_string16 = "\r\n				</td>\r\n				<td class=\"right\">\r\n					".toCharArray();
    _jsp_string22 = ");\r\n			</script>\r\n			".toCharArray();
    _jsp_string14 = ")\">\r\n					".toCharArray();
    _jsp_string19 = " Partie)</a>".toCharArray();
    _jsp_string1 = "\r\n			<tr class=\"".toCharArray();
    _jsp_string15 = "\r\n							".toCharArray();
    _jsp_string4 = "\">\r\n					".toCharArray();
    _jsp_string20 = " Partien)</a>".toCharArray();
    _jsp_string10 = "</a>\r\n							".toCharArray();
    _jsp_string17 = "<a href=\"collection.jsp?CId=".toCharArray();
  }
}

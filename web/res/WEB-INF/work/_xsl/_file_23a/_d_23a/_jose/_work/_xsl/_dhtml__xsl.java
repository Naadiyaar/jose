/*
 * Generated by Resin-3.0.14 (built Tue, 05 Jul 2005 11:03:36 PDT)
 */

package _xsl._file_23a._d_23a._jose._work._xsl;

import java.io.*;
import java.util.*;
import org.w3c.dom.*;
import org.xml.sax.*;
import com.caucho.util.*;
import com.caucho.xml.*;
import com.caucho.xpath.*;
import com.caucho.xpath.expr.*;
import com.caucho.xpath.pattern.*;
import com.caucho.xsl.*;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;

public class _dhtml__xsl extends JavaStylesheet {
  private StylesheetEnv stylesheets[];

  // 'styles'
// css.xsl:5
  private void _xsl_template_styles(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[0]);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      Iterator _xsl_iter0 = _select_patterns[0].select(node, env);
      while (_xsl_iter0.hasNext()) {
        Node _xsl_ptr1 = (Node) _xsl_iter0.next();
        _xsl_arg1.setSelect(node, _select_patterns[0]);
        _xsl_arg1.setCurrentNode(_xsl_ptr1);
        applyNode(out, _xsl_ptr1, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'style'
// css.xsl:9
  private void _xsl_template_style(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[0]);
    _exprs[28].addParam(env, "family", node, env);
    _exprs[29].addParam(env, "size", node, env);
    _exprs[30].addParam(env, "bold", node, env);
    _exprs[31].addParam(env, "italic", node, env);
    _exprs[32].addParam(env, "color", node, env);
    _exprs[33].addParam(env, "indent", node, env);
    if (_exprs[0].evalBoolean(node, env)) {
      out.print("\n	.");
      out.valueOf(_exprs[34].evalObject(node, env));
      out.print(" {\n	");
      if (_exprs[1].evalBoolean(node, env)) {
        out.print("	font-family: ");
        if (_exprs[35].evalBoolean(node, env)) {
          out.print("\"");
          out.valueOf(_exprs[36].evalObject(node, env));
          out.print("\"");
        }
        else {
          out.valueOf(_exprs[36].evalObject(node, env));
        }
        out.print(";\n	");
      }
      if (_exprs[2].evalBoolean(node, env)) {
        out.print("	font-size: ");
        out.valueOf(_exprs[37].evalObject(node, env));
        out.print("pt;\n	");
      }
      out.print("	font-weight: ");
      if (_exprs[38].evalBoolean(node, env)) {
        out.print("bold");
      }
      else {
        out.print("normal");
      }
      out.print(";\n	");
      out.print("	font-style: ");
      if (_exprs[39].evalBoolean(node, env)) {
        out.print("italic");
      }
      else {
        out.print("normal");
      }
      out.print(";\n	");
      out.print("	color: ");
      if (_exprs[40].evalBoolean(node, env)) {
        out.valueOf(_exprs[41].evalObject(node, env));
      }
      else {
        out.print("black");
      }
      out.print(";\n	");
      if (_exprs[3].evalBoolean(node, env)) {
        out.print("	text-indent: ");
        out.valueOf(_exprs[42].evalObject(node, env));
        out.print("pt;\n	");
      }
      out.print("}\n	\n	");
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }

  void _xsl_macro_include_css(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    _exprs[43].addParam(env, "cssurl", node, env);
    _exprs[44].addParam(env, "css_standalone", node, env);
    if (_exprs[45].evalBoolean(node, env)) {
      out.setLocation("file:/D:/jose/work/xsl/css.xsl", "css.xsl", 82);
      out.pushElement("", null, "link", "link");
      out.attribute("rel", "StyleSheet");
      out.attribute("type", "text/css");
      XMLWriter _xsl_attr_0 = out.pushAttribute("href", _namespaces[0]);
      out.valueOf(_exprs[46].evalObject(node, env));
      out.print("games.css");
      out.popAttribute(_xsl_attr_0);
      out.popElement();
    }
    else {
      out.setLocation("file:/D:/jose/work/xsl/css.xsl", "css.xsl", 88);
      out.pushElement("", null, "style", "style");
      {
        Env _xsl_arg1 = XPath.createCall(env);
        for (Node _xsl_ptr1 = node.getFirstChild();
             _xsl_ptr1 != null;
             _xsl_ptr1 = _xsl_ptr1.getNextSibling()) {
          if (_xsl_ptr1.getNodeName() == "styles" &&
              _xsl_ptr1 instanceof Element) {
            _xsl_arg1.setSelect(node, _select_patterns[1]);
            _xsl_arg1.setCurrentNode(_xsl_ptr1);
            applyNode(out, _xsl_ptr1, _xsl_arg1, 0, 2147483647);
          }
        }
        _xsl_arg1.free();
      }
      out.print("\n\n							p {\n								margin-top: 6pt;\n								margin-bottom: 6pt;\n							}\n							\n						");
      out.popElement();
    }
  }

  // 'jose-export'
// html_header.xsl:5
  private void _xsl_template_joseexport(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[1]);
    out.print("\n	");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_ptr0 = node.getFirstChild();
           _xsl_ptr0 != null;
           _xsl_ptr0 = _xsl_ptr0.getNextSibling()) {
        if (_xsl_ptr0.getNodeName() == "game" &&
            _xsl_ptr0 instanceof Element) {
          for (Node _xsl_ptr1 = _xsl_ptr0.getFirstChild();
               _xsl_ptr1 != null;
               _xsl_ptr1 = _xsl_ptr1.getNextSibling()) {
            if (_xsl_ptr1.getNodeName() == "head" &&
                _xsl_ptr1 instanceof Element) {
              _xsl_arg1.setSelect(node, _select_patterns[2]);
              _xsl_arg1.setCurrentNode(_xsl_ptr1);
              applyNode(out, _xsl_ptr1, _xsl_arg1, 0, 2147483647);
            }
          }
        }
      }
      _xsl_arg1.free();
    }
    out.print("\n	");
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'head'
// html_header.xsl:13
  private void _xsl_template_head(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[1]);
    out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 15);
    out.pushElement("", null, "font", "font");
    out.attribute("class", "header");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[47].addVar(_xsl_arg1, "head", node, env);
      _xsl_macro_first_ncheader_ncline(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[47].addVar(_xsl_arg1, "head", node, env);
      _xsl_macro_second_ncheader_ncline(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[47].addVar(_xsl_arg1, "head", node, env);
      _xsl_macro_third_ncheader_ncline(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }

  void _xsl_macro_first_ncheader_ncline(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    _exprs[48].addParam(env, "Event", node, env);
    _exprs[49].addParam(env, "EventDate", node, env);
    _exprs[50].addParam(env, "Site", node, env);
    _exprs[51].addParam(env, "Date", node, env);
    _exprs[52].addParam(env, "Round", node, env);
    _exprs[53].addParam(env, "Board", node, env);
    _exprs[54].addParam(env, "isEvent", node, env);
    _exprs[55].addParam(env, "isEventDate", node, env);
    _exprs[56].addParam(env, "isSite", node, env);
    _exprs[57].addParam(env, "isDate", node, env);
    _exprs[58].addParam(env, "isRound", node, env);
    _exprs[59].addParam(env, "isBoard", node, env);
    if (_exprs[4].evalBoolean(node, env)) {
      if (_exprs[5].evalBoolean(node, env)) {
        out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 54);
        out.pushElement("", null, "font", "font");
        out.attribute("class", "header_event");
        out.valueOf(_exprs[60].evalObject(node, env));
        if (_exprs[6].evalBoolean(node, env)) {
          out.print(" (");
          out.valueOf(_exprs[61].evalObject(node, env));
          out.print(") ");
        }
        if (_exprs[7].evalBoolean(node, env)) {
          out.print(", ");
        }
        out.popElement();
      }
      if (_exprs[8].evalBoolean(node, env)) {
        out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 62);
        out.pushElement("", null, "font", "font");
        out.attribute("class", "header_site");
        out.valueOf(_exprs[62].evalObject(node, env));
        if (_exprs[9].evalBoolean(node, env)) {
          out.print(" ");
        }
        else if (_exprs[10].evalBoolean(node, env)) {
          out.print(", ");
        }
        out.popElement();
      }
      if (_exprs[9].evalBoolean(node, env)) {
        out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 73);
        out.pushElement("", null, "font", "font");
        out.attribute("class", "header_date");
        out.valueOf(_exprs[63].evalObject(node, env));
        if (_exprs[10].evalBoolean(node, env)) {
          out.print(", ");
        }
        out.popElement();
      }
      if (_exprs[10].evalBoolean(node, env)) {
        if (_exprs[11].evalBoolean(node, env)) {
          out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 81);
          out.pushElement("", null, "font", "font");
          out.attribute("class", "header_round");
          out.valueOf(_exprs[64].evalObject(node, env));
          out.print(": ");
          out.valueOf(_exprs[65].evalObject(node, env));
          if (_exprs[12].evalBoolean(node, env)) {
            out.print(", ");
          }
          out.popElement();
        }
        if (_exprs[12].evalBoolean(node, env)) {
          out.valueOf(_exprs[66].evalObject(node, env));
          out.print(": ");
          out.valueOf(_exprs[67].evalObject(node, env));
        }
      }
      out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 93);
      out.pushElement("", null, "br", "br");
      out.popElement();
    }
  }
  void _xsl_macro_second_ncheader_ncline(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    _exprs[68].addParam(env, "White", node, env);
    _exprs[69].addParam(env, "WhiteTitle", node, env);
    _exprs[70].addParam(env, "WhiteELO", node, env);
    _exprs[71].addParam(env, "Black", node, env);
    _exprs[72].addParam(env, "BlackTitle", node, env);
    _exprs[73].addParam(env, "BlackELO", node, env);
    _exprs[74].addParam(env, "Result", node, env);
    _exprs[75].addParam(env, "isWhite", node, env);
    _exprs[76].addParam(env, "isWhiteTitle", node, env);
    _exprs[77].addParam(env, "isWhiteELO", node, env);
    _exprs[78].addParam(env, "isBlack", node, env);
    _exprs[79].addParam(env, "isBlackTitle", node, env);
    _exprs[80].addParam(env, "isBlackELO", node, env);
    _exprs[81].addParam(env, "isResult", node, env);
    if (_exprs[13].evalBoolean(node, env)) {
      if (_exprs[14].evalBoolean(node, env)) {
        out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 124);
        out.pushElement("", null, "font", "font");
        out.attribute("class", "header_white");
        out.valueOf(_exprs[82].evalObject(node, env));
        out.print(" ");
        out.valueOf(_exprs[83].evalObject(node, env));
        out.popElement();
        if (_exprs[15].evalBoolean(node, env)) {
          out.print(" (");
          out.valueOf(_exprs[84].evalObject(node, env));
          out.print(") ");
        }
        if (_exprs[16].evalBoolean(node, env)) {
          out.print(" - ");
        }
      }
      if (_exprs[16].evalBoolean(node, env)) {
        out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 134);
        out.pushElement("", null, "font", "font");
        out.attribute("class", "header_black");
        out.valueOf(_exprs[85].evalObject(node, env));
        out.print(" ");
        out.valueOf(_exprs[86].evalObject(node, env));
        out.popElement();
        if (_exprs[17].evalBoolean(node, env)) {
          out.print(" (");
          out.valueOf(_exprs[87].evalObject(node, env));
          out.print(") ");
        }
      }
      if (_exprs[18].evalBoolean(node, env)) {
        out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 143);
        out.pushElement("", null, "font", "font");
        out.attribute("class", "header_result");
        out.print(" ");
        out.valueOf(_exprs[88].evalObject(node, env));
        out.popElement();
      }
      out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 149);
      out.pushElement("", null, "br", "br");
      out.popElement();
    }
  }
  void _xsl_macro_third_ncheader_ncline(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    _exprs[89].addParam(env, "ECO", node, env);
    _exprs[90].addParam(env, "Opening", node, env);
    _exprs[91].addParam(env, "Annotator", node, env);
    _exprs[92].addParam(env, "isECO", node, env);
    _exprs[93].addParam(env, "isOpening", node, env);
    _exprs[94].addParam(env, "isAnnotator", node, env);
    if (_exprs[19].evalBoolean(node, env)) {
      out.valueOf(_exprs[95].evalObject(node, env));
      out.print(" ");
      out.valueOf(_exprs[96].evalObject(node, env));
      out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 172);
      out.pushElement("", null, "br", "br");
      out.popElement();
    }
    if (_exprs[20].evalBoolean(node, env)) {
      out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 177);
      out.pushElement("", null, "br", "br");
      out.popElement();
      out.valueOf(_exprs[97].evalObject(node, env));
      out.print(": ");
      out.valueOf(_exprs[98].evalObject(node, env));
      out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 180);
      out.pushElement("", null, "br", "br");
      out.popElement();
    }
    out.setLocation("file:/D:/jose/work/xsl/html_header.xsl", "html_header.xsl", 183);
    out.pushElement("", null, "br", "br");
    out.popElement();
  }

  // 'n'
// fig.xsl:15
  private void _xsl_template_n(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[2]);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[99].addVar(_xsl_arg1, "f", node, env);
      _xsl_macro_fig(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'b'
// fig.xsl:20
  private void _xsl_template_b(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[2]);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[100].addVar(_xsl_arg1, "f", node, env);
      _xsl_macro_fig(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'r'
// fig.xsl:25
  private void _xsl_template_r(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[2]);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[101].addVar(_xsl_arg1, "f", node, env);
      _xsl_macro_fig(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'q'
// fig.xsl:30
  private void _xsl_template_q(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[2]);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[102].addVar(_xsl_arg1, "f", node, env);
      _xsl_macro_fig(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'k'
// fig.xsl:35
  private void _xsl_template_k(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[2]);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[103].addVar(_xsl_arg1, "f", node, env);
      _xsl_macro_fig(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }

  void _xsl_macro_fig(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    _exprs[104].addParam(env, "d", node, env);
    _exprs[105].addParam(env, "fig", node, env);
    if (_exprs[106].evalBoolean(node, env)) {
      out.setLocation("file:/D:/jose/work/xsl/fig.xsl", "fig.xsl", 49);
      out.pushElement("", null, "img", "img");
      XMLWriter _xsl_attr_0 = out.pushAttribute("alt", _namespaces[1]);
      out.valueOf(_exprs[107].evalObject(node, env));
      out.popAttribute(_xsl_attr_0);
      XMLWriter _xsl_attr_1 = out.pushAttribute("src", _namespaces[1]);
      if (_exprs[21].evalBoolean(node, env)) {
        out.valueOf(_exprs[108].evalObject(node, env));
        out.print("/");
      }
      out.valueOf(_exprs[109].evalObject(node, env));
      out.print("/");
      out.valueOf(_exprs[110].evalObject(node, env));
      out.print("/");
      out.valueOf(_exprs[107].evalObject(node, env));
      out.print(".png");
      out.popAttribute(_xsl_attr_1);
      XMLWriter _xsl_attr_2 = out.pushAttribute("width", _namespaces[1]);
      out.valueOf(_exprs[111].evalObject(node, env));
      out.popAttribute(_xsl_attr_2);
      XMLWriter _xsl_attr_3 = out.pushAttribute("height", _namespaces[1]);
      out.valueOf(_exprs[112].evalObject(node, env));
      out.popAttribute(_xsl_attr_3);
      out.popElement();
    }
    else {
      out.setLocation("file:/D:/jose/work/xsl/fig.xsl", "fig.xsl", 63);
      out.pushElement("", null, "span", "span");
      XMLWriter _xsl_attr_4 = out.pushAttribute("class", _namespaces[1]);
      out.print("body_figurine_");
      out.valueOf(_exprs[113].evalObject(node, env));
      out.popAttribute(_xsl_attr_4);
      out.valueOf(_exprs[114].evalObject(node, env));
      out.popElement();
    }
  }

  // 'body'
// html_body.xsl:19
  private void _xsl_template_body(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 20);
    out.pushElement("", null, "font", "font");
    out.attribute("class", "body");
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 21);
    out.pushElement("", null, "font", "font");
    out.attribute("class", "body_line");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'v'
// html_body.xsl:28
  private void _xsl_template_v(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    _exprs[115].addParam(env, "style", node, env);
    _exprs[116].addParam(env, "prefix", node, env);
    _exprs[117].addParam(env, "suffix", node, env);
    _exprs[118].addParam(env, "newline", node, env);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 35);
    out.pushElement("", null, "font", "font");
    XMLWriter _xsl_attr_0 = out.pushAttribute("class", _namespaces[2]);
    out.valueOf(_exprs[119].evalObject(node, env));
    out.popAttribute(_xsl_attr_0);
    if (_exprs[120].evalBoolean(node, env)) {
      out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 39);
      out.pushElement("", null, "p", "p");
      out.valueOf(_exprs[121].evalObject(node, env));
      {
        Env _xsl_arg1 = XPath.createCall(env);
        for (Node _xsl_node = node.getFirstChild();
             _xsl_node != null;
             _xsl_node = _xsl_node.getNextSibling()) {
          _xsl_arg1.setSelect(node, null);
          _xsl_arg1.setCurrentNode(_xsl_node);
          applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
        }
        _xsl_arg1.free();
      }
      out.valueOf(_exprs[122].evalObject(node, env));
      out.popElement();
    }
    else {
      out.valueOf(_exprs[121].evalObject(node, env));
      {
        Env _xsl_arg1 = XPath.createCall(env);
        for (Node _xsl_node = node.getFirstChild();
             _xsl_node != null;
             _xsl_node = _xsl_node.getNextSibling()) {
          _xsl_arg1.setSelect(node, null);
          _xsl_arg1.setCurrentNode(_xsl_node);
          applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
        }
        _xsl_arg1.free();
      }
      out.valueOf(_exprs[122].evalObject(node, env));
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'depth'
// html_body.xsl:53
  private void _xsl_template_depth(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'a'
// html_body.xsl:57
  private void _xsl_template_a(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    _xsl_loop0:
    for (Node _xsl_ptr1 = node.getFirstChild();
         _xsl_ptr1 != null;
         _xsl_ptr1 = _xsl_ptr1.getNextSibling()) {
      if (_xsl_ptr1.getNodeName() == "text" &&
          _xsl_ptr1 instanceof Element) {
        out.valueOf(_xsl_ptr1);
        break _xsl_loop0;
      }
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'c'
// html_body.xsl:62
  private void _xsl_template_c(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    _exprs[123].addParam(env, "style", node, env);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 65);
    out.pushElement("", null, "font", "font");
    XMLWriter _xsl_attr_0 = out.pushAttribute("class", _namespaces[2]);
    out.valueOf(_exprs[119].evalObject(node, env));
    out.popAttribute(_xsl_attr_0);
    out.print(" ");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.print(" ");
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'bold'
// html_body.xsl:73
  private void _xsl_template_bold(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 74);
    out.pushElement("", null, "b", "b");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'italic'
// html_body.xsl:76
  private void _xsl_template_italic(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 77);
    out.pushElement("", null, "i", "i");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'underline'
// html_body.xsl:79
  private void _xsl_template_underline(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 80);
    out.pushElement("", null, "u", "u");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'center'
// html_body.xsl:82
  private void _xsl_template_center(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 83);
    out.pushElement("", null, "center", "center");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'right'
// html_body.xsl:85
  private void _xsl_template_right(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 86);
    out.pushElement("", null, "div", "div");
    out.attribute("align", "right");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'font'
// html_body.xsl:88
  private void _xsl_template_font(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 89);
    out.pushElement("", null, "font", "font");
    XMLWriter _xsl_attr_0 = out.pushAttribute("style", _namespaces[2]);
    if (_exprs[22].evalBoolean(node, env)) {
      _exprs[124].addVar(env, "percent", node, env);
      out.print("font-size: ");
      out.valueOf(_exprs[125].evalObject(node, env));
      out.print("pt;");
      env.popVars(1);
    }
    if (_exprs[23].evalBoolean(node, env)) {
      out.print("color: ");
      if (node instanceof Element)
        out.print(((Element) node).getAttribute("color"));
      out.print(";");
    }
    if (_exprs[24].evalBoolean(node, env)) {
      out.print("font-family: '");
      if (node instanceof Element)
        out.print(((Element) node).getAttribute("face"));
      out.print("';");
    }
    out.popAttribute(_xsl_attr_0);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'br'
// html_body.xsl:101
  private void _xsl_template_br(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 101);
    out.pushElement("", null, "br", "br");
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'result'
// html_body.xsl:104
  private void _xsl_template_result(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    if (_exprs[25].evalBoolean(node, env)) {
      out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 106);
      out.pushElement("", null, "br", "br");
      out.popElement();
      out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 107);
      out.pushElement("", null, "font", "font");
      out.attribute("class", "body.result");
      out.valueOf(node);
      out.popElement();
    }
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'diagram'
// html_body.xsl:114
  private void _xsl_template_diagram(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 115);
    out.pushElement("", null, "a", "a");
    XMLWriter _xsl_attr_0 = out.pushAttribute("href", _namespaces[2]);
    out.print("javascript:go(");
    out.valueOf(_exprs[126].evalObject(node, env));
    out.print(")");
    out.popAttribute(_xsl_attr_0);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 117);
    out.pushElement("", null, "table", "table");
    out.attribute("cellspacing", "0");
    out.attribute("cellpadding", "0");
    out.attribute("border", "0");
    out.attribute("class", "body_inline");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_ptr1 = node.getFirstChild();
           _xsl_ptr1 != null;
           _xsl_ptr1 = _xsl_ptr1.getNextSibling()) {
        if (_xsl_ptr1.getNodeName() == "table" &&
            _xsl_ptr1 instanceof Element) {
          _xsl_arg1.setSelect(node, _select_patterns[3]);
          _xsl_arg1.setCurrentNode(_xsl_ptr1);
          applyNode(out, _xsl_ptr1, _xsl_arg1, 0, 2147483647);
        }
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'tr'
// html_body.xsl:123
  private void _xsl_template_tr(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 124);
    out.pushElement("", null, "tr", "tr");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_ptr0 = node.getFirstChild();
           _xsl_ptr0 != null;
           _xsl_ptr0 = _xsl_ptr0.getNextSibling()) {
        if (_xsl_ptr0.getNodeName() == "td" &&
            _xsl_ptr0 instanceof Element) {
          _xsl_arg1.setSelect(node, _select_patterns[4]);
          _xsl_arg1.setCurrentNode(_xsl_ptr0);
          applyNode(out, _xsl_ptr0, _xsl_arg1, 0, 2147483647);
        }
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'td'
// html_body.xsl:129
  private void _xsl_template_td(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[3]);
    out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 130);
    out.pushElement("", null, "td", "td");
    if (_exprs[106].evalBoolean(node, env)) {
      out.setLocation("file:/D:/jose/work/xsl/html_body.xsl", "html_body.xsl", 134);
      out.pushElement("", null, "img", "img");
      out.attribute("border", "0");
      XMLWriter _xsl_attr_0 = out.pushAttribute("src", _namespaces[2]);
      out.valueOf(_exprs[127].evalObject(node, env));
      out.print("/");
      _xsl_loop1:
      for (Node _xsl_ptr2 = node.getFirstChild();
           _xsl_ptr2 != null;
           _xsl_ptr2 = _xsl_ptr2.getNextSibling()) {
        if (_xsl_ptr2.getNodeName() == "img" &&
            _xsl_ptr2 instanceof Element) {
          out.valueOf(_xsl_ptr2);
          break _xsl_loop1;
        }
      }
      out.print(".png");
      out.popAttribute(_xsl_attr_0);
      out.popElement();
    }
    else {
      _xsl_loop3:
      for (Node _xsl_ptr4 = node.getFirstChild();
           _xsl_ptr4 != null;
           _xsl_ptr4 = _xsl_ptr4.getNextSibling()) {
        if (_xsl_ptr4.getNodeName() == "char" &&
            _xsl_ptr4 instanceof Element) {
          out.valueOf(_xsl_ptr4);
          break _xsl_loop3;
        }
      }
    }
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'jose-export'
// file:///D:/jose/work/xsl/dhtml.xsl:58
  private void _xsl_template_joseexport0(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[4]);
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 60);
    out.pushElement("", null, "html", "html");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 61);
    out.pushElement("", null, "head", "head");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 62);
    out.pushElement("", null, "title", "title");
    out.print("jose Games");
    out.popElement();
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _xsl_macro_include_css(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 64);
    out.pushElement("", null, "style", "style");
    out.print("\n			A { text-decoration: none}\n			img { border: 0; behavior: url(pngHack.htc); }\n			div.scroll-body { width: 100%; overflow:auto; border: thin; }\n			");
    out.popElement();
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 71);
    out.pushElement("", null, "body", "body");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 73);
    out.pushElement("", null, "script", "script");
    out.attribute("language", "JavaScript");
    out.print("\n            imgurl = \"");
    if (_exprs[21].evalBoolean(node, env)) {
      out.valueOf(_exprs[108].evalObject(node, env));
      out.print("/");
    }
    out.valueOf(_exprs[128].evalObject(node, env));
    out.print("/");
    out.valueOf(_exprs[129].evalObject(node, env));
    out.print("\";\n            ");
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 84);
    out.pushElement("", null, "script", "script");
    out.attribute("language", "JavaScript");
    XMLWriter _xsl_attr_0 = out.pushAttribute("src", _namespaces[3]);
    if (_exprs[21].evalBoolean(node, env)) {
      out.valueOf(_exprs[108].evalObject(node, env));
      out.print("/");
    }
    out.print("games.js");
    out.popAttribute(_xsl_attr_0);
    out.popElement();
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_ptr1 = node.getFirstChild();
           _xsl_ptr1 != null;
           _xsl_ptr1 = _xsl_ptr1.getNextSibling()) {
        if (_xsl_ptr1.getNodeName() == "game" &&
            _xsl_ptr1 instanceof Element) {
          _xsl_arg1.setSelect(node, _select_patterns[5]);
          _xsl_arg1.setCurrentNode(_xsl_ptr1);
          applyNode(out, _xsl_ptr1, _xsl_arg1, 0, 2147483647);
        }
      }
      _xsl_arg1.free();
    }
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 95);
    out.pushElement("", null, "center", "center");
    out.attribute("class", "body_comment_4");
    out.print("created with ");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 95);
    out.pushElement("", null, "a", "a");
    out.attribute("href", "http://jose-chess.sourceforge.net");
    out.print("jose-chess.sourceforge.net");
    out.popElement();
    out.popElement();
    out.popElement();
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'game'
// file:///D:/jose/work/xsl/dhtml.xsl:103
  private void _xsl_template_game(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[4]);
    _exprs[130].addParam(env, "gidx", node, env);
    _exprs[131].addParam(env, "fen", node, env);
    _exprs[132].addParam(env, "hasMoves", node, env);
    _exprs[133].addParam(env, "hasFen", node, env);
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 109);
    out.pushElement("", null, "script", "script");
    out.attribute("language", "JavaScript");
    out.print("\n			g = games[games.length] = new Object();\n			var j = pos.length;\n\n			g.start = j;\n			g.current = j;\n\n			");
    if (_exprs[134].evalBoolean(node, env)) {
      out.print("g.init=\"");
      out.valueOf(_exprs[135].evalObject(node, env));
      out.print("\";");
    }
    else {
      out.print("g.init=null;");
    }
    {
      com.caucho.xpath.pattern.AbstractPattern _xsl_sel0;
      _xsl_sel0 = _select_patterns[6];
      Node _xsl_cxt0 = env.getContextNode();
      Node _xsl_cur0 = env.getCurrentNode();
      NodeIterator _xsl_iter1 = _xsl_sel0.select(node, env);
      ExprEnvironment _xsl_env0 = env.setExprEnv(_xsl_iter1);
      while (_xsl_iter1.hasNext()) {
        Node node1 = node;
        node = _xsl_iter1.nextNode();
        env.setCurrentNode(node);
        out.print("	pos[j] = \"");
        _xsl_loop2:
        for (Node _xsl_ptr3 = node.getFirstChild();
             _xsl_ptr3 != null;
             _xsl_ptr3 = _xsl_ptr3.getNextSibling()) {
          if (_xsl_ptr3.getNodeName() == "fen" &&
              _xsl_ptr3 instanceof Element) {
            out.valueOf(_xsl_ptr3);
            break _xsl_loop2;
          }
        }
        out.print("\"; dep[j++] = ");
        out.valueOf(_exprs[136].evalObject(node, env));
        out.print(";\n");
        node = node1;
        env.setCurrentNode(_xsl_cur0);
      }
      env.setExprEnv(_xsl_env0);
    }
    out.print("\n\n			g.end = j;\n		");
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 127);
    out.pushElement("", null, "table", "table");
    out.attribute("id", "toptable");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 128);
    out.pushElement("", null, "tr", "tr");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 129);
    out.pushElement("", null, "td", "td");
    out.attribute("rowspan", "2");
    if (_exprs[26].evalBoolean(node, env)) {
      {
        Env _xsl_arg1 = XPath.createCall(env);
        _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
        _xsl_macro_create_ncdiagram(out, node, _xsl_arg1);
        _xsl_arg1.free();
      }
    }
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 136);
    out.pushElement("", null, "td", "td");
    out.attribute("width", "80");
    out.attribute("rowspan", "2");
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 139);
    out.pushElement("", null, "td", "td");
    out.attribute("valign", "top");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_ptr4 = node.getFirstChild();
           _xsl_ptr4 != null;
           _xsl_ptr4 = _xsl_ptr4.getNextSibling()) {
        if (_xsl_ptr4.getNodeName() == "head" &&
            _xsl_ptr4 instanceof Element) {
          _xsl_arg1.setSelect(node, _select_patterns[7]);
          _xsl_arg1.setCurrentNode(_xsl_ptr4);
          applyNode(out, _xsl_ptr4, _xsl_arg1, 0, 2147483647);
        }
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.popElement();
    if (_exprs[27].evalBoolean(node, env)) {
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 145);
      out.pushElement("", null, "tr", "tr");
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 146);
      out.pushElement("", null, "td", "td");
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 147);
      out.pushElement("", null, "form", "form");
      XMLWriter _xsl_attr_5 = out.pushAttribute("name", _namespaces[3]);
      out.print("game-");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.popAttribute(_xsl_attr_5);
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 150);
      out.pushElement("", null, "image", "image");
      out.attribute("width", "36");
      out.attribute("height", "32");
      out.attribute("src", "backward-stop.png");
      XMLWriter _xsl_attr_6 = out.pushAttribute("name", _namespaces[3]);
      out.print("button-");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print("-1");
      out.popAttribute(_xsl_attr_6);
      XMLWriter _xsl_attr_7 = out.pushAttribute("onclick", _namespaces[3]);
      out.print("first(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(")");
      out.popAttribute(_xsl_attr_7);
      XMLWriter _xsl_attr_8 = out.pushAttribute("onmouseover", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",1,1)");
      out.popAttribute(_xsl_attr_8);
      XMLWriter _xsl_attr_9 = out.pushAttribute("onmouseout", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",1,2)");
      out.popAttribute(_xsl_attr_9);
      XMLWriter _xsl_attr_10 = out.pushAttribute("onmousedown", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",1,3)");
      out.popAttribute(_xsl_attr_10);
      XMLWriter _xsl_attr_11 = out.pushAttribute("onmouseup", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",1,4)");
      out.popAttribute(_xsl_attr_11);
      out.popElement();
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 158);
      out.pushElement("", null, "image", "image");
      out.attribute("width", "36");
      out.attribute("height", "32");
      out.attribute("src", "left.png");
      XMLWriter _xsl_attr_12 = out.pushAttribute("name", _namespaces[3]);
      out.print("button-");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print("-2");
      out.popAttribute(_xsl_attr_12);
      XMLWriter _xsl_attr_13 = out.pushAttribute("onclick", _namespaces[3]);
      out.print("previous(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(")");
      out.popAttribute(_xsl_attr_13);
      XMLWriter _xsl_attr_14 = out.pushAttribute("onmouseover", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",2,1)");
      out.popAttribute(_xsl_attr_14);
      XMLWriter _xsl_attr_15 = out.pushAttribute("onmouseout", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",2,2)");
      out.popAttribute(_xsl_attr_15);
      XMLWriter _xsl_attr_16 = out.pushAttribute("onmousedown", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",2,3)");
      out.popAttribute(_xsl_attr_16);
      XMLWriter _xsl_attr_17 = out.pushAttribute("onmouseup", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",2,4)");
      out.popAttribute(_xsl_attr_17);
      out.popElement();
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 166);
      out.pushElement("", null, "image", "image");
      out.attribute("width", "36");
      out.attribute("height", "32");
      out.attribute("src", "right.png");
      XMLWriter _xsl_attr_18 = out.pushAttribute("name", _namespaces[3]);
      out.print("button-");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print("-3");
      out.popAttribute(_xsl_attr_18);
      XMLWriter _xsl_attr_19 = out.pushAttribute("onclick", _namespaces[3]);
      out.print("next(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(")");
      out.popAttribute(_xsl_attr_19);
      XMLWriter _xsl_attr_20 = out.pushAttribute("onmouseover", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",3,1)");
      out.popAttribute(_xsl_attr_20);
      XMLWriter _xsl_attr_21 = out.pushAttribute("onmouseout", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",3,2)");
      out.popAttribute(_xsl_attr_21);
      XMLWriter _xsl_attr_22 = out.pushAttribute("onmousedown", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",3,3)");
      out.popAttribute(_xsl_attr_22);
      XMLWriter _xsl_attr_23 = out.pushAttribute("onmouseup", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",3,4)");
      out.popAttribute(_xsl_attr_23);
      out.popElement();
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 174);
      out.pushElement("", null, "image", "image");
      out.attribute("width", "36");
      out.attribute("height", "32");
      out.attribute("src", "forward-stop.png");
      XMLWriter _xsl_attr_24 = out.pushAttribute("name", _namespaces[3]);
      out.print("button-");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print("-4");
      out.popAttribute(_xsl_attr_24);
      XMLWriter _xsl_attr_25 = out.pushAttribute("onclick", _namespaces[3]);
      out.print("last(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(")");
      out.popAttribute(_xsl_attr_25);
      XMLWriter _xsl_attr_26 = out.pushAttribute("onmouseover", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",4,1)");
      out.popAttribute(_xsl_attr_26);
      XMLWriter _xsl_attr_27 = out.pushAttribute("onmouseout", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",4,2)");
      out.popAttribute(_xsl_attr_27);
      XMLWriter _xsl_attr_28 = out.pushAttribute("onmousedown", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",4,3)");
      out.popAttribute(_xsl_attr_28);
      XMLWriter _xsl_attr_29 = out.pushAttribute("onmouseup", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",4,4)");
      out.popAttribute(_xsl_attr_29);
      out.popElement();
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 183);
      out.pushElement("", null, "image", "image");
      out.attribute("width", "36");
      out.attribute("height", "32");
      out.attribute("src", "fast-forward.png");
      XMLWriter _xsl_attr_30 = out.pushAttribute("name", _namespaces[3]);
      out.print("button-");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print("-5");
      out.popAttribute(_xsl_attr_30);
      XMLWriter _xsl_attr_31 = out.pushAttribute("onclick", _namespaces[3]);
      out.print("animate(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(", 0.5, +1)");
      out.popAttribute(_xsl_attr_31);
      XMLWriter _xsl_attr_32 = out.pushAttribute("onmouseover", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",5,1)");
      out.popAttribute(_xsl_attr_32);
      XMLWriter _xsl_attr_33 = out.pushAttribute("onmouseout", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",5,2)");
      out.popAttribute(_xsl_attr_33);
      XMLWriter _xsl_attr_34 = out.pushAttribute("onmousedown", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",5,3)");
      out.popAttribute(_xsl_attr_34);
      XMLWriter _xsl_attr_35 = out.pushAttribute("onmouseup", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",5,4)");
      out.popAttribute(_xsl_attr_35);
      out.popElement();
      out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 191);
      out.pushElement("", null, "image", "image");
      out.attribute("width", "36");
      out.attribute("height", "32");
      out.attribute("src", "stop.png");
      XMLWriter _xsl_attr_36 = out.pushAttribute("name", _namespaces[3]);
      out.print("button-");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print("-6");
      out.popAttribute(_xsl_attr_36);
      XMLWriter _xsl_attr_37 = out.pushAttribute("onclick", _namespaces[3]);
      out.print("stop_animation()");
      out.popAttribute(_xsl_attr_37);
      XMLWriter _xsl_attr_38 = out.pushAttribute("onmouseover", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",6,1)");
      out.popAttribute(_xsl_attr_38);
      XMLWriter _xsl_attr_39 = out.pushAttribute("onmouseout", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",6,2)");
      out.popAttribute(_xsl_attr_39);
      XMLWriter _xsl_attr_40 = out.pushAttribute("onmousedown", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",6,3)");
      out.popAttribute(_xsl_attr_40);
      XMLWriter _xsl_attr_41 = out.pushAttribute("onmouseup", _namespaces[3]);
      out.print("hover(");
      out.valueOf(_exprs[137].evalObject(node, env));
      out.print(",6,4)");
      out.popAttribute(_xsl_attr_41);
      out.popElement();
      out.popElement();
      out.popElement();
      out.popElement();
    }
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 205);
    out.pushElement("", null, "div", "div");
    out.attribute("class", "scroll-body");
    out.attribute("id", "gamebody");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_ptr42 = node.getFirstChild();
           _xsl_ptr42 != null;
           _xsl_ptr42 = _xsl_ptr42.getNextSibling()) {
        if (_xsl_ptr42.getNodeName() == "body" &&
            _xsl_ptr42 instanceof Element) {
          _xsl_arg1.setSelect(node, _select_patterns[8]);
          _xsl_arg1.setCurrentNode(_xsl_ptr42);
          applyNode(out, _xsl_ptr42, _xsl_arg1, 0, 2147483647);
        }
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 209);
    out.pushElement("", null, "script", "script");
    out.attribute("language", "JavaScript");
    out.setAttribute("defer", _namespaces[3], "");
    out.print("\n			resizeDiv();\n			window.onresize = resizeDiv;\n			initial(");
    out.valueOf(_exprs[137].evalObject(node, env));
    out.print(")\n		");
    out.popElement();
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 215);
    out.pushElement("", null, "br", "br");
    out.popElement();
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'm'
// file:///D:/jose/work/xsl/dhtml.xsl:220
  private void _xsl_template_m(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[4]);
    _exprs[138].addParam(env, "style", node, env);
    _exprs[139].addParam(env, "i", node, env);
    out.print(" ");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 225);
    out.pushElement("", null, "a", "a");
    XMLWriter _xsl_attr_0 = out.pushAttribute("name", _namespaces[3]);
    out.valueOf(_exprs[140].evalObject(node, env));
    out.popAttribute(_xsl_attr_0);
    XMLWriter _xsl_attr_1 = out.pushAttribute("href", _namespaces[3]);
    out.print("javascript:go(");
    out.valueOf(_exprs[140].evalObject(node, env));
    out.print(")");
    out.popAttribute(_xsl_attr_1);
    XMLWriter _xsl_attr_2 = out.pushAttribute("class", _namespaces[3]);
    out.valueOf(_exprs[119].evalObject(node, env));
    out.popAttribute(_xsl_attr_2);
    {
      Env _xsl_arg1 = XPath.createCall(env);
      for (Node _xsl_node = node.getFirstChild();
           _xsl_node != null;
           _xsl_node = _xsl_node.getNextSibling()) {
        _xsl_arg1.setSelect(node, null);
        _xsl_arg1.setCurrentNode(_xsl_node);
        applyNode(out, _xsl_node, _xsl_arg1, 0, 2147483647);
      }
      _xsl_arg1.free();
    }
    out.popElement();
    out.print(" ");
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }


  // 'fen'
// file:///D:/jose/work/xsl/dhtml.xsl:233
  private void _xsl_template_fen(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    int _xsl_top = env.getTop();
    boolean oldEscaping = out.disableEscaping(false);
    env.setStylesheetEnv(stylesheets[4]);
    out.print("");
    out.disableEscaping(oldEscaping);
    env.popToTop(_xsl_top);
  }

  void _xsl_macro_create_ncdiagram(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 240);
    out.pushElement("", null, "table", "table");
    out.attribute("border", "1");
    out.attribute("cellpadding", "0");
    out.attribute("cellspacing", "0");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 240);
    out.pushElement("", null, "tr", "tr");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 240);
    out.pushElement("", null, "td", "td");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 241);
    out.pushElement("", null, "table", "table");
    out.attribute("cellpadding", "0");
    out.attribute("cellspacing", "0");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[141].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[142].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[143].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[144].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[145].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[146].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[147].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[148].addVar(_xsl_arg1, "row", node, env);
      _xsl_macro_create_ncdiagram_ncrow(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.popElement();
    out.popElement();
    out.popElement();
    out.popElement();
  }
  void _xsl_macro_create_ncdiagram_ncrow(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 258);
    out.pushElement("", null, "tr", "tr");
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[141].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[142].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[143].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[144].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[145].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[146].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[147].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    {
      Env _xsl_arg1 = XPath.createCall(env);
      _exprs[137].addVar(_xsl_arg1, "gidx", node, env);
      _exprs[149].addVar(_xsl_arg1, "row", node, env);
      _exprs[148].addVar(_xsl_arg1, "col", node, env);
      _xsl_macro_create_ncdiagram_nccell(out, node, _xsl_arg1);
      _xsl_arg1.free();
    }
    out.popElement();
  }
  void _xsl_macro_create_ncdiagram_nccell(XslWriter out, Node inputNode, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    Node node = inputNode;
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 276);
    out.pushElement("", null, "td", "td");
    out.setLocation("file:/D:/jose/work/xsl/dhtml.xsl", "file:///D:/jose/work/xsl/dhtml.xsl", 276);
    out.pushElement("", null, "img", "img");
    XMLWriter _xsl_attr_0 = out.pushAttribute("name", _namespaces[3]);
    out.print("i-");
    out.valueOf(_exprs[137].evalObject(node, env));
    out.print("-");
    out.valueOf(_exprs[150].evalObject(node, env));
    out.popAttribute(_xsl_attr_0);
    XMLWriter _xsl_attr_1 = out.pushAttribute("width", _namespaces[3]);
    _xsl_loop2:
    for (Node _xsl_ptr3 = ownerDocument(node).getFirstChild();
         _xsl_ptr3 != null;
         _xsl_ptr3 = _xsl_ptr3.getNextSibling()) {
      if (_xsl_ptr3.getNodeName() == "jose-export" &&
          _xsl_ptr3 instanceof Element) {
        for (Node _xsl_ptr4 = _xsl_ptr3.getFirstChild();
             _xsl_ptr4 != null;
             _xsl_ptr4 = _xsl_ptr4.getNextSibling()) {
          if (_xsl_ptr4.getNodeName() == "figurines" &&
              _xsl_ptr4 instanceof Element) {
            for (Node _xsl_ptr5 = _xsl_ptr4.getFirstChild();
                 _xsl_ptr5 != null;
                 _xsl_ptr5 = _xsl_ptr5.getNextSibling()) {
              if (_xsl_ptr5.getNodeName() == "dia" &&
                  _xsl_ptr5 instanceof Element) {
                for (Node _xsl_ptr6 = _xsl_ptr5.getFirstChild();
                     _xsl_ptr6 != null;
                     _xsl_ptr6 = _xsl_ptr6.getNextSibling()) {
                  if (_xsl_ptr6.getNodeName() == "px-size" &&
                      _xsl_ptr6 instanceof Element) {
                    out.valueOf(_xsl_ptr6);
                    break _xsl_loop2;
                  }
                }
              }
            }
          }
        }
      }
    }
    out.popAttribute(_xsl_attr_1);
    XMLWriter _xsl_attr_7 = out.pushAttribute("height", _namespaces[3]);
    _xsl_loop8:
    for (Node _xsl_ptr9 = ownerDocument(node).getFirstChild();
         _xsl_ptr9 != null;
         _xsl_ptr9 = _xsl_ptr9.getNextSibling()) {
      if (_xsl_ptr9.getNodeName() == "jose-export" &&
          _xsl_ptr9 instanceof Element) {
        for (Node _xsl_ptr10 = _xsl_ptr9.getFirstChild();
             _xsl_ptr10 != null;
             _xsl_ptr10 = _xsl_ptr10.getNextSibling()) {
          if (_xsl_ptr10.getNodeName() == "figurines" &&
              _xsl_ptr10 instanceof Element) {
            for (Node _xsl_ptr11 = _xsl_ptr10.getFirstChild();
                 _xsl_ptr11 != null;
                 _xsl_ptr11 = _xsl_ptr11.getNextSibling()) {
              if (_xsl_ptr11.getNodeName() == "dia" &&
                  _xsl_ptr11 instanceof Element) {
                for (Node _xsl_ptr12 = _xsl_ptr11.getFirstChild();
                     _xsl_ptr12 != null;
                     _xsl_ptr12 = _xsl_ptr12.getNextSibling()) {
                  if (_xsl_ptr12.getNodeName() == "px-size" &&
                      _xsl_ptr12 instanceof Element) {
                    out.valueOf(_xsl_ptr12);
                    break _xsl_loop8;
                  }
                }
              }
            }
          }
        }
      }
    }
    out.popAttribute(_xsl_attr_7);
    out.popElement();
    out.popElement();
  }
  protected void applyNode(XslWriter out, Node node, Env env, int _xsl_min, int _xsl_max)
    throws Exception
  {
    Object _xsl_tmp;

    switch (getTemplateId(_static_templates, node, env, _xsl_min, _xsl_max)) {
    case 1:
      _xsl_template_styles(out, node, env);
      break;
    case 2:
      _xsl_template_style(out, node, env);
      break;
    case 3:
      _xsl_template_joseexport(out, node, env);
      break;
    case 4:
      _xsl_template_head(out, node, env);
      break;
    case 5:
      _xsl_template_n(out, node, env);
      break;
    case 6:
      _xsl_template_b(out, node, env);
      break;
    case 7:
      _xsl_template_r(out, node, env);
      break;
    case 8:
      _xsl_template_q(out, node, env);
      break;
    case 9:
      _xsl_template_k(out, node, env);
      break;
    case 10:
      _xsl_template_body(out, node, env);
      break;
    case 11:
      _xsl_template_v(out, node, env);
      break;
    case 12:
      _xsl_template_depth(out, node, env);
      break;
    case 13:
      _xsl_template_a(out, node, env);
      break;
    case 14:
      _xsl_template_c(out, node, env);
      break;
    case 15:
      _xsl_template_bold(out, node, env);
      break;
    case 16:
      _xsl_template_italic(out, node, env);
      break;
    case 17:
      _xsl_template_underline(out, node, env);
      break;
    case 18:
      _xsl_template_center(out, node, env);
      break;
    case 19:
      _xsl_template_right(out, node, env);
      break;
    case 20:
      _xsl_template_font(out, node, env);
      break;
    case 21:
      _xsl_template_br(out, node, env);
      break;
    case 22:
      _xsl_template_result(out, node, env);
      break;
    case 23:
      _xsl_template_diagram(out, node, env);
      break;
    case 24:
      _xsl_template_tr(out, node, env);
      break;
    case 25:
      _xsl_template_td(out, node, env);
      break;
    case 26:
      _xsl_template_joseexport0(out, node, env);
      break;
    case 27:
      _xsl_template_game(out, node, env);
      break;
    case 28:
      _xsl_template_m(out, node, env);
      break;
    case 29:
      _xsl_template_fen(out, node, env);
      break;
    default:
      switch (node.getNodeType()) {
      case Node.ELEMENT_NODE:
      case Node.DOCUMENT_NODE:
      case Node.DOCUMENT_FRAGMENT_NODE:
        env.setSelect(node, null);
        for (Node child = node.getFirstChild();
             child != null;
             child = child.getNextSibling()) {
          env.setCurrentNode(child);
          applyNode(out, child, env, 0, 2147483647);
        }
        break;
      default:
        applyNodeDefault(out, node, env);
        break;
      }
      break;
    }
  }

  static HashMap _static_templates;

  static {
    _static_templates = new HashMap();
    Template []values;
    try {
      Template []star = new Template[] {
      };

      _static_templates.put("*", star);
      _init_templates_0(star);
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
  private static void _init_templates_0(Template []star)
    throws Exception
  {
    _static_templates.put("k", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("k").getPattern(), "", 6, 6, 0.0, 8, "_xsl_template_k", 9),
    }));
    _static_templates.put("game", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("game").getPattern(), "", 0, 8, 0.0, 26, "_xsl_template_game", 27),
    }));
    _static_templates.put("c", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("c").getPattern(), "", 7, 7, 0.0, 13, "_xsl_template_c", 14),
    }));
    _static_templates.put("fen", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("fen").getPattern(), "", 0, 8, 0.0, 28, "_xsl_template_fen", 29),
    }));
    _static_templates.put("q", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("q").getPattern(), "", 6, 6, 0.0, 7, "_xsl_template_q", 8),
    }));
    _static_templates.put("tr", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("tr").getPattern(), "", 7, 7, 0.0, 23, "_xsl_template_tr", 24),
    }));
    _static_templates.put("v", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("v").getPattern(), "", 7, 7, 0.0, 10, "_xsl_template_v", 11),
    }));
    _static_templates.put("font", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("font").getPattern(), "", 7, 7, 0.0, 19, "_xsl_template_font", 20),
    }));
    _static_templates.put("td", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("td").getPattern(), "", 7, 7, 0.0, 24, "_xsl_template_td", 25),
    }));
    _static_templates.put("styles", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("styles").getPattern(), "", 4, 4, 0.0, 0, "_xsl_template_styles", 1),
    }));
    _static_templates.put("a", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("a").getPattern(), "", 7, 7, 0.0, 12, "_xsl_template_a", 13),
    }));
    _static_templates.put("italic", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("italic").getPattern(), "", 7, 7, 0.0, 15, "_xsl_template_italic", 16),
    }));
    _static_templates.put("style", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("style").getPattern(), "", 4, 4, 0.0, 1, "_xsl_template_style", 2),
    }));
    _static_templates.put("center", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("center").getPattern(), "", 7, 7, 0.0, 17, "_xsl_template_center", 18),
    }));
    _static_templates.put("diagram", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("diagram").getPattern(), "", 7, 7, 0.0, 22, "_xsl_template_diagram", 23),
    }));
    _static_templates.put("body", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("body").getPattern(), "", 7, 7, 0.0, 9, "_xsl_template_body", 10),
    }));
    _static_templates.put("right", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("right").getPattern(), "", 7, 7, 0.0, 18, "_xsl_template_right", 19),
    }));
    _static_templates.put("r", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("r").getPattern(), "", 6, 6, 0.0, 6, "_xsl_template_r", 7),
    }));
    _static_templates.put("depth", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("depth").getPattern(), "", 7, 7, 0.0, 11, "_xsl_template_depth", 12),
    }));
    _static_templates.put("b", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("b").getPattern(), "", 6, 6, 0.0, 5, "_xsl_template_b", 6),
    }));
    _static_templates.put("m", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("m").getPattern(), "", 0, 8, 0.0, 27, "_xsl_template_m", 28),
    }));
    _static_templates.put("jose-export", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("jose-export").getPattern(), "", 0, 8, 0.0, 25, "_xsl_template_joseexport0", 26),
        new Template(XPath.parseMatch("jose-export").getPattern(), "", 5, 5, 0.0, 2, "_xsl_template_joseexport", 3),
    }));
    _static_templates.put("bold", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("bold").getPattern(), "", 7, 7, 0.0, 14, "_xsl_template_bold", 15),
    }));
    _static_templates.put("result", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("result").getPattern(), "", 7, 7, 0.0, 21, "_xsl_template_result", 22),
    }));
    _static_templates.put("head", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("head").getPattern(), "", 5, 5, 0.0, 3, "_xsl_template_head", 4),
    }));
    _static_templates.put("underline", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("underline").getPattern(), "", 7, 7, 0.0, 16, "_xsl_template_underline", 17),
    }));
    _static_templates.put("br", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("br").getPattern(), "", 7, 7, 0.0, 20, "_xsl_template_br", 21),
    }));
    _static_templates.put("n", 
      mergeTemplates(star, new Template[] {
        new Template(XPath.parseMatch("n").getPattern(), "", 6, 6, 0.0, 4, "_xsl_template_n", 5),
    }));
  }
  private void _xsl_init_vars(XslWriter out, Node node, Env env)
    throws Exception
  {
    out.addNamespace("jose", "http://jose-chess.sourceforge.net/xsl-info");
    Object _xsl_tmp;
    if (out.getParameter("imgfig") != null)
      env.setGlobal("imgfig", out.getParameter("imgfig"));
    else {
      env.setGlobal("imgfig", _exprs[151].evalObject(node, env));
    }
    if (out.getParameter("imgurl") != null)
      env.setGlobal("imgurl", out.getParameter("imgurl"));
    else {
      env.setGlobal("imgurl", _exprs[43].evalObject(node, env));
    }
    if (out.getParameter("imgfig") != null)
      env.setGlobal("imgfig", out.getParameter("imgfig"));
    else {
      env.setGlobal("imgfig", _exprs[151].evalObject(node, env));
    }
    if (out.getParameter("imgurl") != null)
      env.setGlobal("imgurl", out.getParameter("imgurl"));
    else {
      env.setGlobal("imgurl", _exprs[43].evalObject(node, env));
    }
    if (out.getParameter("inlineurl") != null)
      env.setGlobal("inlineurl", out.getParameter("inlineurl"));
    else {
      if (env.getVar("inlineurl") == null) {
        XMLWriter frag13 = out.pushFragment();
        if (_exprs[21].evalBoolean(node, env)) {
          out.valueOf(_exprs[108].evalObject(node, env));
          out.print("/");
        }
        out.valueOf(_exprs[152].evalObject(node, env));
        out.print("/");
        out.valueOf(_exprs[153].evalObject(node, env));
        env.setGlobal("inlineurl", out.popFragment(frag13));
      }
    }
    com.caucho.vfs.Path pwd;
    pwd = (com.caucho.vfs.Path) out.getProperty("caucho.pwd");
  }
  protected void _xsl_init(XslWriter out, Node node, Env env)
    throws Exception
  {
    Object _xsl_tmp;
    _xsl_init_vars(out, node, env);
  }
  public boolean isModified()
  {
    return com.caucho.util.CauchoSystem.getVersionId() != -8852640556211195023L ||
           super.isModified();
  }
  public void init(com.caucho.vfs.Path path)
    throws Exception
  {
    super.init(path);
    com.caucho.vfs.Path pwd = path.getParent();
    addDepend(new com.caucho.vfs.Depend(pwd.lookup("/D:/jose/work/xsl/dhtml.xsl"), 9161427294949472791L));
    addDepend(new com.caucho.vfs.Depend(pwd.lookup("/D:/jose/work/xsl/css.xsl"), -4845378324178464608L));
    addDepend(new com.caucho.vfs.Depend(pwd.lookup("/D:/jose/work/xsl/html_header.xsl"), -7403808901670976385L));
    addDepend(new com.caucho.vfs.Depend(pwd.lookup("/D:/jose/work/xsl/fig.xsl"), -3564983345448769169L));
    addDepend(new com.caucho.vfs.Depend(pwd.lookup("/D:/jose/work/xsl/html_body.xsl"), -2819358367707863329L));
    stylesheets = new StylesheetEnv[5];
    StylesheetEnv env;
    env = new StylesheetEnv();
    stylesheets[0] = env;
    env.setPath(pwd.lookup("css.xsl"));
    env = new StylesheetEnv();
    stylesheets[1] = env;
    env.setPath(pwd.lookup("html_header.xsl"));
    env = new StylesheetEnv();
    stylesheets[2] = env;
    env.setPath(pwd.lookup("fig.xsl"));
    env = new StylesheetEnv();
    stylesheets[3] = env;
    env.setPath(pwd.lookup("html_body.xsl"));
    env = new StylesheetEnv();
    stylesheets[4] = env;
    env.setPath(pwd.lookup("file:///D:/jose/work/xsl/dhtml.xsl"));
    _output.put("encoding", "UTF-8");
    _output.put("indent", "yes");
    _output.put("method", "html");
    _output.put("version", "4.0");
    ArrayList params = new ArrayList();
    params.add("imgfig");
    params.add("imgurl");
    params.add("imgfig");
    params.add("imgurl");
    params.add("inlineurl");
    setProperty("caucho.global.param", params);
    _namespaces = new NamespaceContext[] { 
      new NamespaceContext(new NamespaceContext(new NamespaceContext(null, "xsl", "http://www.w3.org/1999/XSL/Transform"), "fo", "http://www.w3.org/1999/XSL/Format"), "xsl", "http://www.w3.org/1999/XSL/Transform"),
      new NamespaceContext(new NamespaceContext(new NamespaceContext(new NamespaceContext(null, "xsl", "http://www.w3.org/1999/XSL/Transform"), "fo", "http://www.w3.org/1999/XSL/Format"), "xsl", "http://www.w3.org/1999/XSL/Transform"), "fo", "http://www.w3.org/1999/XSL/Format"),
      new NamespaceContext(new NamespaceContext(new NamespaceContext(null, "xsl", "http://www.w3.org/1999/XSL/Transform"), "fo", "http://www.w3.org/1999/XSL/Format"), "xsl", "http://www.w3.org/1999/XSL/Transform"),
      new NamespaceContext(new NamespaceContext(null, "xsl", "http://www.w3.org/1999/XSL/Transform"), "fo", "http://www.w3.org/1999/XSL/Format"),
    };

    com.caucho.xsl.fun.KeyFun keyFun = new com.caucho.xsl.fun.KeyFun();
    addFunction("key", keyFun);

    com.caucho.xsl.fun.FormatNumberFun formatFun = new com.caucho.xsl.fun.FormatNumberFun();
    java.text.DecimalFormatSymbols symbols;
    addFunction("format-number", formatFun);
  }
  private static Expr []_exprs;
  static {
    try {
      _exprs = new Expr[] { 
        XPath.parseExpr("((((boolean($family) or boolean($size)) or ($bold = 'true')) or ($italic = 'true')) or boolean($color))"),
        XPath.parseExpr("boolean($family)"),
        XPath.parseExpr("boolean($size)"),
        XPath.parseExpr("boolean($indent)"),
        XPath.parseExpr("((((($isEvent or $isEventDate) or $isSite) or $isDate) or $isRound) or $isBoard)"),
        XPath.parseExpr("$isEvent"),
        XPath.parseExpr("$isEventDate"),
        XPath.parseExpr("((($isSite or $isDate) or $isRound) or $isBoard)"),
        XPath.parseExpr("$isSite"),
        XPath.parseExpr("$isDate"),
        XPath.parseExpr("($isRound or $isBoard)"),
        XPath.parseExpr("$isRound"),
        XPath.parseExpr("$isBoard"),
        XPath.parseExpr("(((((($isWhiteTitle or $isWhite) or $isWhiteELO) or $isBlackTitle) or $isBlack) or $isBlackELO) or $isResult)"),
        XPath.parseExpr("(($isWhiteTitle or $isWhite) or $isWhiteELO)"),
        XPath.parseExpr("$isWhiteELO"),
        XPath.parseExpr("(($isBlackTitle or $isBlack) or $isBlackELO)"),
        XPath.parseExpr("$isBlackELO"),
        XPath.parseExpr("$isResult"),
        XPath.parseExpr("($isECO or $isOpening)"),
        XPath.parseExpr("$isAnnotator"),
        XPath.parseExpr("(string-length($imgurl) > 0.0)"),
        XPath.parseExpr("@size"),
        XPath.parseExpr("@color"),
        XPath.parseExpr("@face"),
        XPath.parseExpr("(. != '*')"),
        XPath.parseExpr("($hasFen or $hasMoves)"),
        XPath.parseExpr("$hasMoves"),
        XPath.parseExpr("a[(key = 'family')]/value"),
        XPath.parseExpr("a[(key = 'size')]/value"),
        XPath.parseExpr("a[(key = 'bold')]/value"),
        XPath.parseExpr("a[(key = 'italic')]/value"),
        XPath.parseExpr("a[(key = 'foreground')]/value"),
        XPath.parseExpr("a[(key = 'FirstLineIndent')]/value"),
        XPath.parseExpr("translate(name, '.', '_')"),
        XPath.parseExpr("contains($family, ' ')"),
        XPath.parseExpr("$family"),
        XPath.parseExpr("$size"),
        XPath.parseExpr("($bold = 'true')"),
        XPath.parseExpr("($italic = 'true')"),
        XPath.parseExpr("boolean($color)"),
        XPath.parseExpr("$color"),
        XPath.parseExpr("round($indent)"),
        XPath.parseExpr("/descendant::option[(key = 'xsl.html.img.dir')]/value"),
        XPath.parseExpr("(/descendant::option[(key = 'xsl.css.standalone')]/value = 'true')"),
        XPath.parseExpr("$css_standalone"),
        XPath.parseExpr("$cssurl"),
        XPath.parseExpr("."),
        XPath.parseExpr("($head)/tag[(key = 'Event')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'EventDate')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Site')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Date')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Round')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Board')]/value"),
        XPath.parseExpr("((string-length($Event) > 0.0) and ($Event != '-'))"),
        XPath.parseExpr("((string-length($EventDate) > 0.0) and ($EventDate != '-'))"),
        XPath.parseExpr("((string-length($Site) > 0.0) and ($Site != '-'))"),
        XPath.parseExpr("((string-length($Date) > 0.0) and ($Date != '-'))"),
        XPath.parseExpr("((string-length($Round) > 0.0) and ($Round != '-'))"),
        XPath.parseExpr("((string-length($Board) > 0.0) and ($Board != '-'))"),
        XPath.parseExpr("$Event"),
        XPath.parseExpr("$EventDate"),
        XPath.parseExpr("$Site"),
        XPath.parseExpr("$Date"),
        XPath.parseExpr("($head)/tag[(key = 'Round')]/text"),
        XPath.parseExpr("$Round"),
        XPath.parseExpr("($head)/tag[(key = 'Board')]/text"),
        XPath.parseExpr("$Board"),
        XPath.parseExpr("($head)/tag[(key = 'White')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'WhiteTitle')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'WhiteELO')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Black')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'BlackTitle')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'BlackELO')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Result')]/value"),
        XPath.parseExpr("((string-length($White) > 0.0) and ($White != '-'))"),
        XPath.parseExpr("((string-length($WhiteTitle) > 0.0) and ($WhiteTitle != '-'))"),
        XPath.parseExpr("((string-length($WhiteELO) > 0.0) and ($WhiteELO != '-'))"),
        XPath.parseExpr("((string-length($Black) > 0.0) and ($Black != '-'))"),
        XPath.parseExpr("((string-length($BlackTitle) > 0.0) and ($BlackTitle != '-'))"),
        XPath.parseExpr("((string-length($BlackELO) > 0.0) and ($BlackELO != '-'))"),
        XPath.parseExpr("(((string-length($Result) > 0.0) and ($Result != '-')) and ($Result != '*'))"),
        XPath.parseExpr("$WhiteTitle"),
        XPath.parseExpr("$White"),
        XPath.parseExpr("$WhiteELO"),
        XPath.parseExpr("$BlackTitle"),
        XPath.parseExpr("$Black"),
        XPath.parseExpr("$BlackELO"),
        XPath.parseExpr("$Result"),
        XPath.parseExpr("($head)/tag[(key = 'ECO')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Opening')]/value"),
        XPath.parseExpr("($head)/tag[(key = 'Annotator')]/value"),
        XPath.parseExpr("((string-length($ECO) > 0.0) and ($ECO != '-'))"),
        XPath.parseExpr("((string-length($Opening) > 0.0) and ($Opening != '-'))"),
        XPath.parseExpr("((string-length($Annotator) > 0.0) and ($Annotator != '-'))"),
        XPath.parseExpr("$ECO"),
        XPath.parseExpr("$Opening"),
        XPath.parseExpr("($head)/tag[(key = 'Annotator')]/text"),
        XPath.parseExpr("$Annotator"),
        XPath.parseExpr("'n'"),
        XPath.parseExpr("'b'"),
        XPath.parseExpr("'r'"),
        XPath.parseExpr("'q'"),
        XPath.parseExpr("'k'"),
        XPath.parseExpr("number(../../depth)"),
        XPath.parseExpr("/descendant::figurines/fig[((position() = (1.0 + $d)) or (position() = 5.0))]"),
        XPath.parseExpr("$imgfig"),
        XPath.parseExpr("$f"),
        XPath.parseExpr("$imgurl"),
        XPath.parseExpr("($fig)/font"),
        XPath.parseExpr("($fig)/px-size"),
        XPath.parseExpr("($fig)/string[(key = $f)]/width"),
        XPath.parseExpr("($fig)/string[(key = $f)]/height"),
        XPath.parseExpr("$d"),
        XPath.parseExpr("($fig)/string[(key = $f)]/value"),
        XPath.parseExpr("concat('body.line.', depth)"),
        XPath.parseExpr("/descendant::style[(name = $style)]/a[(key = 'variation.prefix')]/value"),
        XPath.parseExpr("/descendant::style[(name = $style)]/a[(key = 'variation.suffix')]/value"),
        XPath.parseExpr("/descendant::style[(name = $style)]/a[(key = 'variation.newline')]/value"),
        XPath.parseExpr("translate($style, '.', '_')"),
        XPath.parseExpr("($newline = 'true')"),
        XPath.parseExpr("$prefix"),
        XPath.parseExpr("$suffix"),
        XPath.parseExpr("concat('body.comment.', ../depth)"),
        XPath.parseExpr("number(substring(@size,1.0,(string-length(@size) - 1.0)))"),
        XPath.parseExpr("(12.0 * (1.0 + ($percent div 100.0)))"),
        XPath.parseExpr("(count(preceding::m) - 1.0)"),
        XPath.parseExpr("$inlineurl"),
        XPath.parseExpr("/descendant::figurines/dia/font"),
        XPath.parseExpr("/descendant::figurines/dia/px-size"),
        XPath.parseExpr("count(preceding::game)"),
        XPath.parseExpr("head/tag[(key = 'FEN')]/value"),
        XPath.parseExpr("(count(descendant::m) > 0.0)"),
        XPath.parseExpr("(string-length($fen) > 0.0)"),
        XPath.parseExpr("$hasFen"),
        XPath.parseExpr("$fen"),
        XPath.parseExpr("../depth"),
        XPath.parseExpr("$gidx"),
        XPath.parseExpr("concat('body.line.', ../depth)"),
        XPath.parseExpr("count(preceding::m)"),
        XPath.parseExpr("$i"),
        XPath.parseExpr("0.0"),
        XPath.parseExpr("1.0"),
        XPath.parseExpr("2.0"),
        XPath.parseExpr("3.0"),
        XPath.parseExpr("4.0"),
        XPath.parseExpr("5.0"),
        XPath.parseExpr("6.0"),
        XPath.parseExpr("7.0"),
        XPath.parseExpr("$row"),
        XPath.parseExpr("((8.0 * $row) + $col)"),
        XPath.parseExpr("(/descendant::option[(key = 'xsl.html.figs')]/value = 'img')"),
        XPath.parseExpr("/descendant::figurines/inline/font"),
        XPath.parseExpr("/descendant::figurines/inline/px-size"),
      };
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
  private static com.caucho.xpath.pattern.AbstractPattern []_select_patterns;
  private static com.caucho.xpath.pattern.AbstractPattern []_match_patterns;
  static {
    try {
      _select_patterns = new com.caucho.xpath.pattern.AbstractPattern[] { 
        XPath.parseSelect("/descendant::style").getPattern(),
        XPath.parseSelect("styles").getPattern(),
        XPath.parseSelect("game/head").getPattern(),
        XPath.parseSelect("table").getPattern(),
        XPath.parseSelect("td").getPattern(),
        XPath.parseSelect("game").getPattern(),
        XPath.parseSelect("descendant::m").getPattern(),
        XPath.parseSelect("head").getPattern(),
        XPath.parseSelect("body").getPattern(),
      };
      _match_patterns = new com.caucho.xpath.pattern.AbstractPattern[] { 
      };
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
}
